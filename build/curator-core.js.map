{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./src/curator-core.js","webpack://[name]/./src/helpers.js","webpack://[name]/./src/options.js"],"names":["getItemStyles","boxSizing","position","getEmptyGrid","gridRows","Array","from","_","getItemPosition","gridWidth","gridHeight","gridCols","width","height","left","top","renderMode","flex","renderModeType","getItemPositionPixels","getItemPositionPercentages","leftPct","topPct","widthPct","heightPct","ending","widthPx","heightPx","topPx","leftPx","updateMovedItem","item","gridSizing","gridOptions","newX","newY","newWidth","newHeight","gridColumns","movedItem","console","error","key","x","y","styles","getItemPositionStyles","getUpdatedMovedItems","items","draggedItemId","newTopPx","newLeftPx","newWidthPx","newHeightPx","forEach","getUpdatedGridSizeItems","ignoreIds","map","indexOf","id","getGridBoundaries","leftBoundary","rightBoundary","topBoundary","bottomBoundary","getItemSizing","itemProps","pxPerColumn","pxPerRow","itemWidthPx","itemHeightPx","calculateGridMatrixSize","itemsCanResizeGrid","resizeGridDirections","canResizeX","canResizeY","rows","columns","rowsRequired","columnsRequired","Math","max","calculateGridSize","newRowCount","newColumnCount","newGridWidth","newGridHeight","calculateMovementChange","movementDetails","gridResizeable","xDiff","currentMouseX","initialMouseX","yDiff","currentMouseY","initialMouseY","initialLeft","initialTop","round","calculateResizeChange","initialWidth","initialHeight","calculatePositionChange","state","getNoMovementResult","movementChange","targetItem","updatedItems","success","grid","itemsMoved","itemHasMoved","itemHasResized","checkProposedGridSizing","proposedGridColumns","proposedGridRows","resizeOptions","getPlaceholderStyles","defaultPlaceholderStyles","addItemToGrid","onItemMovement","movementIsWithinBounds","defaultResult","draggedItem","dragResult","algo","run","gridResized","newSize","Object","keys","itemsToMove","meta","isDragging","isResizing","placeholderStyles","length","onItemPositionChanged","previousItemProps","positionChange","positionHasChanged","onItemDragStart","glued","onItemDrag","onItemDragStop","updatedItem","onItemResizeStart","onItemResize","onItemResizeStop","updateGridWithItemMovement","oldX","oldY","oldWidth","oldHeight","ensureGridHasRow","setGridWithValue","undefined","updateGridWithItem","removeGridItem","itemsReverted","onGridItemRemoved","revertDetails","find","i","filter","rowIndex","value","overwrite","j","cellValue","helpers","isDefined","transform","otherStyles","enableCSS3","getGridXY","getGridPosition","getGridWH","gridPixels","itemPixels","matrixLevels","getBoundaryLimitedSizing","currentLeftPx","currentTopPx","currentWidthPx","currentHeightPx","boundaries","xResizeable","yResizeable","min","objIsInArray","array","obj","objKeyValue","fixed","none","both","defaultItemOptions","className","visible","displayResize","border","zIndex","defaultGridOptions","stickyElements","useTransition","transitionDuration","onTransitionComplete","element","details","eventIfFired","onAllTransitionsComplete","resizeClassName"],"mappings":"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","file":"curator-core.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"curator-core\"] = factory();\n\telse\n\t\troot[\"curator-core\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/curator-core.js\");\n","\r\n\r\n// Snapper core is responsible for handling all logic for interacting with the grid\r\n// except:\r\n// 1. direct ui manipulation (responsibility of the wrapper)\r\n// 2. internal grid determination (responsibility of the algorithm)\r\n// 3. Maintenence of state (responsibility of the wrapper)\r\nimport helpers from './helpers'\r\nimport { \r\n    renderModeType, \r\n    resizeOptions, \r\n    defaultItemOptions, \r\n    defaultGridOptions ,\r\n    defaultPlaceholderStyles,\r\n} from './options'\r\n\r\nexport default {\r\n    getItemStyles() {\r\n        return {\r\n            boxSizing: 'border-box',\r\n            position: 'absolute'\r\n        }\r\n    },\r\n\r\n    getEmptyGrid( gridRows ) {\r\n        return Array.from( Array( gridRows ), _ => [] );\r\n    },\r\n\r\n    /// \r\n    /// Calculate the position of the item within the grid\r\n    ///\r\n    getItemPosition(gridWidth, gridHeight, gridRows, gridCols, width, height, left, top, renderMode) {\r\n        const flex = ( renderMode === renderModeType.flex )\r\n\r\n        // even though the container could change and these calculations need to rerun on that event,\r\n        // it looks much nicer if theyre percentages on the widgets - even if it temporarily gives a 1px gap\r\n        // and then closes the gap on mouse up, than having px values \r\n        if (flex) {\r\n           return {\r\n               ...this.getItemPositionPixels( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top ),\r\n               ...this.getItemPositionPercentages( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top ),\r\n           }\r\n        }\r\n        else {\r\n            return this.getItemPositionPixels( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top )\r\n        }\r\n    },\r\n\r\n    getItemPositionPercentages( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top ) {\r\n        const leftPct = left / gridCols * 100\r\n        const topPct = top / gridRows * 100\r\n        const widthPct = width / gridCols * 100\r\n        const heightPct = height / gridRows * 100\r\n\r\n        const ending = '%'\r\n\r\n        return { leftPct, widthPct, topPct, heightPct, ending }\r\n    },\r\n\r\n    getItemPositionPixels( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top ) {\r\n        const widthPx = gridWidth / gridCols * width\r\n        const heightPx = gridHeight / gridRows * height\r\n        const topPx = gridHeight / gridRows * top\r\n        const leftPx = gridWidth / gridCols * left\r\n\r\n        const ending = 'px';\r\n\r\n        return { widthPx, heightPx, topPx, leftPx, ending }\r\n    },\r\n\r\n    updateMovedItem( item, gridSizing, gridOptions ) {\r\n        const { newX, newY, newWidth, newHeight } = item\r\n        const { widthPx, heightPx, gridRows, gridColumns } = gridSizing\r\n        const renderMode = gridOptions.renderMode\r\n        const movedItem = { ...item }\r\n\r\n        if ( ! ( newWidth && newHeight ) ) {\r\n            // todo\r\n            console.error( `Item ${ key } does not have a newWidth or newHeight value. Unable to correctly resize item`)\r\n            return item\r\n        }\r\n\r\n        // update the values with the set new values\r\n        movedItem.x = newX\r\n        movedItem.y = newY\r\n        movedItem.width = newWidth\r\n        movedItem.height = newHeight\r\n\r\n        const position = this.getItemPosition( gridWidth, gridHeight, gridRows, gridColumns, movedItem.width, movedItem.height, movedItem.x, movedItem.y, renderMode )\r\n        const styles = this.getItemPositionStyles( gridOptions, movedItem.styles, position )\r\n\r\n        movedItem.position = { ...position }\r\n        movedItem.styles = { ...styles }\r\n\r\n        return movedItem\r\n    },\r\n\r\n    getUpdatedMovedItems( items, draggedItemId, newTopPx, newLeftPx, newWidthPx, newHeightPx, gridSizing, gridOptions ) {\r\n        return items.forEach(item => {\r\n            const movedItem = this.updateMovedItem( item, gridSizing, gridOptions )\r\n\r\n            if ( key === draggedItemId ) {\r\n                // todo sync the %\r\n                const position = {\r\n                    ...movedItem.position,\r\n                    ending: 'px',\r\n                    topPx: newTopPx,\r\n                    leftPx: newLeftPx,\r\n                    widthPx: newWidthPx,\r\n                    heightPx: newHeightPx\r\n                }\r\n\r\n                const styles = this.getItemPositionStyles( gridOptions, movedItem.styles, position )\r\n\r\n                movedItem.position = { ...position }\r\n                movedItem.styles = { ...styles }\r\n            }\r\n\r\n            return movedItem\r\n        })\r\n    },\r\n\r\n    getUpdatedGridSizeItems( items, gridOptions, gridSizing, ignoreIds = [] ) {\r\n        const { gridRows, gridColumns, renderMode } = gridOptions\r\n        const { heightPx, widthPx } = gridSizing \r\n\r\n        return items.map( ( item ) => {\r\n            \r\n            if ( ignoreIds.indexOf( item.id ) > -1 )\r\n                return\r\n\r\n            const position = this.getItemPosition( widthPx, heightPx, gridRows, gridColumns, item.width, item.height, item.x, item.y, renderMode )\r\n            const styles = this.getItemPositionStyles( gridOptions, item.styles, position )\r\n\r\n            return {\r\n                ...item,\r\n                position,\r\n                styles\r\n            }\r\n        })\r\n    },\r\n\r\n    getGridBoundaries( gridSizing ) {\r\n        const { widthPx, heightPx } = gridSizing\r\n\r\n        return {\r\n            leftBoundary: 0,\r\n            rightBoundary: widthPx,\r\n            topBoundary: 0,\r\n            bottomBoundary: heightPx\r\n        }\r\n    },\r\n\r\n    getItemSizing( itemProps, gridSizing ) {\r\n        const { widthPx, heightPx } = gridSizing\r\n        const { width, height } = itemProps\r\n        const pxPerColumn = widthPx / gridColumns\r\n        const pxPerRow = heightPx / gridRows\r\n        const itemWidthPx = width * pxPerColumn\r\n        const itemHeightPx = height * pxPerRow\r\n\r\n        return { itemWidthPx, itemHeightPx }\r\n    },\r\n\r\n    calculateGridMatrixSize( items, gridOptions, gridSizing ) {\r\n        const { itemsCanResizeGrid, resizeGridDirections } = gridOptions\r\n        const { gridRows, gridColumns } = gridSizing\r\n        const canResizeX = itemsCanResizeGrid && resizeGridDirections !== 'y'\r\n        const canResizeY = itemsCanResizeGrid && resizeGridDirections !== 'x'\r\n\r\n        if ( !( canResizeX || canResizeY ) ) {\r\n            return {\r\n                rows: gridRows,\r\n                columns: gridColumns\r\n            }\r\n        }\r\n\r\n        let rowsRequired = 0\r\n        let columnsRequired = 0\r\n\r\n        items.forEach(item => {\r\n            const rightBoundary = item.x + item.width\r\n            const bottomBoundary = item.y + item.height\r\n\r\n            if ( rightBoundary > columnsRequired )\r\n                columnsRequired = rightBoundary\r\n\r\n            if ( bottomBoundary > rowsRequired )\r\n                rowsRequired = bottomBoundary\r\n        })\r\n\r\n        return {\r\n            rows: canResizeY ? Math.max( rowsRequired, gridRows ) : gridRows,\r\n            columns: canResizeX ? Math.max( columnsRequired, gridColumns ) : gridColumns\r\n        }\r\n    },\r\n\r\n    calculateGridSize( gridSizing, gridOptions, newRowCount, newColumnCount ) {\r\n        const {  gridRows, gridColumns, } = gridOptions \r\n        const { widthPx, heightPx } = gridSizing\r\n        \r\n        const newGridWidth = ( widthPx / gridColumns ) * newColumnCount\r\n        const newGridHeight = ( heightPx / gridRows ) * newRowCount\r\n\r\n        return {\r\n            newGridWidth,\r\n            newGridHeight\r\n        }\r\n    },\r\n\r\n    calculateMovementChange( itemProps, gridOptions, gridSizing, movementDetails  ) {\r\n        const gridResizeable = gridOptions.itemsCanResizeGrid\r\n        const canResizeX = gridResizeable && gridOptions.resizeGridDirections !== 'y'\r\n        const canResizeY = gridResizeable && gridOptions.resizeGridDirections !== 'x'\r\n\r\n        const pxPerColumn = gridSizing.widthPx / gridOptions.gridColumns\r\n        const pxPerRow = gridSizing.heightPx / gridOptions.gridRows\r\n        const xDiff = movementDetails.currentMouseX - movementDetails.initialMouseX\r\n        const yDiff = movementDetails.currentMouseY - movementDetails.initialMouseY\r\n        \r\n        let newLeftPx = movementDetails.initialLeft + xDiff\r\n        let newTopPx = movementDetails.initialTop + yDiff\r\n        let newX = Math.round( newLeftPx / pxPerColumn )\r\n        let newY = Math.round( newTopPx / pxPerRow )\r\n\r\n        if ( newX < 0 ) {\r\n            newX = 0\r\n        }\r\n        else if ( newX + 1 > gridOptions.gridColumns && !canResizeX ) {\r\n            newX = gridOptions.gridColumns - 1\r\n        }\r\n\r\n        if ( newY < 0 ) {\r\n            newY = 0\r\n        }\r\n        else if ( newY + 1 > gridOptions.gridRows && !canResizeY ) {\r\n            newY = gridOptions.gridRows - 1\r\n        }\r\n\r\n        return {\r\n            newX,\r\n            newY,\r\n            newLeftPx,\r\n            newTopPx,\r\n        }\r\n    },\r\n\r\n    calculateResizeChange( itemProps, gridOptions, gridSizing, movementDetails  ) {\r\n        const pxPerColumn = gridSizing.widthPx / gridOptions.gridColumns\r\n        const pxPerRow = gridSizing.heightPx / gridOptions.gridRows\r\n        const xDiff = movementDetails.currentMouseX - movementDetails.initialMouseX\r\n        const yDiff = movementDetails.currentMouseY - movementDetails.initialMouseY\r\n        \r\n        let newWidthPx = movementDetails.initialWidth + xDiff\r\n        let newHeightPx = movementDetails.initialHeight + yDiff\r\n        let newWidth = Math.round( newWidthPx / pxPerColumn )\r\n        let newHeight = Math.round( newHeightPx / pxPerRow )\r\n\r\n        if ( newWidthPx < pxPerColumn ) {\r\n            newWidth = 1\r\n            newWidthPx = pxPerColumn\r\n        }\r\n\r\n        if ( newHeightPx < pxPerRow ) {\r\n            newHeight = 1\r\n            newHeightPx = pxPerRow\r\n        }\r\n\r\n        return {\r\n            newWidthPx,\r\n            newHeightPx,\r\n            newWidth,\r\n            newHeight,\r\n            newLeftPx: itemProps.position.leftPx,\r\n            newTopPx: itemProps.position.topPx\r\n        }\r\n    },\r\n\r\n    calculatePositionChange( itemProps, state ) {\r\n        const { gridSizing, gridOptions } = state\r\n\r\n        const pxPerColumn = gridSizing.widthPx / gridOptions.gridColumns\r\n        const pxPerRow = gridSizing.heightPx / gridOptions.gridRows\r\n\r\n        const newWidthPx = pxPerColumn * itemProps.width\r\n        const newHeightPx = pxPerRow * itemProps.height\r\n        const newLeftPx = pxPerColumn * itemProps.x\r\n        const newTopPx = pxPerRow * itemProps.y\r\n\r\n        return {\r\n            newWidthPx,\r\n            newHeightPx,\r\n            newLeftPx,\r\n            newTopPx,\r\n            newX: itemProps.x,\r\n            newY: itemProps.y,\r\n            newWidth: itemProps.width,\r\n            newHeight: itemProps.height,\r\n        }\r\n    },\r\n\r\n    getNoMovementResult( state, itemProps, movementChange ) {\r\n        const targetItem = {\r\n            ...itemProps,\r\n            position: {\r\n                ...itemProps.position,\r\n                ending: 'px',\r\n                topPx: Math.max( 0, movementChange.newTopPx ),\r\n                leftPx: Math.max( 0, movementChange.newLeftPx ),\r\n                widthPx: Math.max( 0, movementChange.newWidthPx ),\r\n                heightPx: Math.max( 0, movementChange.newHeightPx )\r\n            }\r\n        }\r\n\r\n        const updatedItems = state.items.map(item => {\r\n            if ( item.id == targetItem.id ) {\r\n                return targetItem\r\n            }\r\n\r\n            return item\r\n        })\r\n\r\n        return {\r\n            success: true, // todo should this be false?\r\n            grid: state.grid,\r\n            updatedItems,\r\n            targetItem,\r\n            gridSizing: state.gridSizing,\r\n            movementChange,\r\n            itemsMoved: false\r\n        }\r\n    },\r\n\r\n    itemHasMoved( itemProps, movementChange ) {\r\n        return ( movementChange.newX != itemProps.x ) || ( movementChange.newY != itemProps.y )\r\n    },\r\n\r\n    itemHasResized( itemProps, movementChange ) {\r\n        return ( movementChange.newWidth !== itemProps.width ) || ( movementChange.newHeight !== itemProps.height ) \r\n    },\r\n\r\n    checkProposedGridSizing( state, proposedGridColumns, proposedGridRows ) {\r\n        const {  gridOptions } = state\r\n        const { itemsCanResizeGrid, resizeGridDirections } = gridOptions\r\n\r\n        const canResizeX = ( itemsCanResizeGrid && resizeGridDirections !== resizeOptions.y )\r\n        const canResizeY = ( itemsCanResizeGrid && resizeGridDirections !== resizeOptions.x )\r\n\r\n        if ( ( !canResizeX && proposedGridColumns !== gridOptions.gridColumns ) || gridOptions.gridColumns < 1 )\r\n            throw 'Invalid grid column proposition from algorithm'\r\n\r\n        else if ( ( !canResizeY && proposedGridRows !== gridOptions.gridRows ) || gridOptions.gridRows < 1 )\r\n            throw 'Invalid grid row proposition from algorithm'\r\n    },\r\n\r\n    getPlaceholderStyles( position ) {\r\n        return {\r\n            ...defaultPlaceholderStyles,\r\n            left: `${ position.leftPx }px`,\r\n            top: `${ position.topPx }px`,\r\n            width: `${ position.widthPx }px`,\r\n            height: `${ position.heightPx }px`\r\n        }\r\n    },\r\n\r\n    addItemToGrid( itemProps, state ) {\r\n        const movementChange = {\r\n            newX: itemProps.x,\r\n            newY: itemProps.y,\r\n            newWidth: itemProps.width,\r\n            newHeight: itemProps.height,\r\n            newTopPx: itemProps.position.topPx,\r\n            newLeftPx: itemProps.position.leftPx,\r\n            newWidthPx: itemProps.position.widthPx,\r\n            newHeightPx: itemProps.position.heightPx\r\n        }\r\n\r\n        return this.onItemMovement( itemProps, state, movementChange )\r\n    },\r\n\r\n    movementIsWithinBounds( movementChange, gridOptions ) {\r\n        const { \r\n            gridColumns, \r\n            gridRows, \r\n            itemsCanResizeGrid, \r\n            resizeGridDirections \r\n        } = gridOptions\r\n\r\n        const {\r\n            newX,\r\n            newY,\r\n            newWidth,\r\n            newHeight\r\n        } = movementChange\r\n\r\n        const canResizeX = itemsCanResizeGrid && resizeGridDirections !== 'y'\r\n        const canResizeY = itemsCanResizeGrid && resizeGridDirections !== 'x'\r\n\r\n        return ( canResizeX || ( newX + newWidth <= gridColumns ) )\r\n            && ( canResizeY || ( newY + newHeight <= gridRows  ) )\r\n            && newX >= 0\r\n            && newY >= 0\r\n            && newWidth > 0\r\n            && newHeight > 0\r\n    },\r\n\r\n    onItemMovement( itemProps, state, movementChange ) {\r\n        const renderMode = state.gridOptions.renderMode\r\n        const { gridOptions } = state\r\n        const defaultResult = this.getNoMovementResult( state, itemProps, movementChange )\r\n        const draggedItem = { ...itemProps }\r\n\r\n        if ( !this.movementIsWithinBounds( movementChange, gridOptions ) ) {\r\n            return defaultResult\r\n        }\r\n\r\n        const dragResult = gridOptions.algo.run( state, draggedItem, movementChange.newX, movementChange.newY, movementChange.newWidth, movementChange.newHeight )\r\n        \r\n        if ( !dragResult.success ){\r\n            return defaultResult\r\n        }\r\n\r\n        const gridResized = ( dragResult.gridColumns !== gridOptions.gridColumns ) \r\n            || ( dragResult.gridRows !== gridOptions.gridRows )\r\n\r\n        let gridWidth = state.gridSizing.widthPx\r\n        let gridHeight = state.gridSizing.heightPx\r\n        \r\n        if ( gridResized ) {\r\n            this.checkProposedGridSizing( state, dragResult.gridColumns, dragResult.gridRows )\r\n            const newSize = this.calculateGridSize( state.gridSizing, gridOptions, dragResult.gridRows, dragResult.gridColumns )\r\n            gridWidth = newSize.newGridWidth\r\n            gridHeight = newSize.newGridHeight\r\n        }\r\n\r\n        const updatedItems = Object.keys( dragResult.itemsToMove )\r\n            .map(key => {\r\n                const movedItem = dragResult.itemsToMove[ key ]\r\n                const { isDragging, isResizing } = movedItem.meta\r\n\r\n                const position = this.getItemPosition( \r\n                    gridWidth, \r\n                    gridHeight, \r\n                    dragResult.gridRows,\r\n                    dragResult.gridColumns, \r\n                    movedItem.width, \r\n                    movedItem.height, \r\n                    movedItem.x, \r\n                    movedItem.y, \r\n                    renderMode \r\n                )\r\n    \r\n                // without these the item will jitter\r\n                if ( movedItem.id === draggedItem.id && ( isDragging || isResizing ) ) {\r\n                    const placeholderStyles = this.getPlaceholderStyles( position )\r\n    \r\n                    movedItem.meta = {\r\n                        ...movedItem.meta,\r\n                        placeholderStyles\r\n                    }\r\n    \r\n                    movedItem.position = {\r\n                        ...movedItem.position,\r\n                        ending: 'px',// movedItem.meta.isDragging || movedItem.meta.isResizing ? 'px' : '%',\r\n                        topPx: movementChange.newTopPx,\r\n                        leftPx: movementChange.newLeftPx,\r\n                        widthPx: movementChange.newWidthPx,\r\n                        heightPx: movementChange.newHeightPx\r\n                    }\r\n    \r\n                    movedItem.styles = this.getItemPositionStyles( gridOptions, movedItem.styles, movedItem.position )\r\n                }\r\n                else {\r\n                    movedItem.position = position\r\n                    movedItem.styles = this.getItemPositionStyles( gridOptions, movedItem.styles, position )\r\n                }\r\n                \r\n                return movedItem\r\n            })\r\n\r\n        return {\r\n            success: dragResult.success,\r\n            grid: state.grid,\r\n            updatedItems,\r\n            itemsMoved: Object.keys( dragResult.itemsToMove ).length > 1,\r\n            targetItem: draggedItem,\r\n            movementChange,\r\n            gridSizing: {\r\n                gridRows: dragResult.gridRows,\r\n                gridColumns: dragResult.gridColumns,\r\n                heightPx: gridHeight,\r\n                widthPx: gridWidth\r\n            }\r\n        }\r\n    },\r\n\r\n    onItemPositionChanged( itemProps, previousItemProps, state ) {\r\n        const positionChange = this.calculatePositionChange( itemProps, state ) \r\n\r\n        if ( !this.positionHasChanged( itemProps, previousItemProps )) {\r\n            return this.getNoMovementResult( state, previousItemProps, positionChange )\r\n        }      \r\n\r\n        return this.onItemMovement( previousItemProps, state, positionChange )\r\n    },\r\n\r\n    positionHasChanged( itemProps, previousItemProps ) {\r\n        return itemProps.x !== previousItemProps.x\r\n            || itemProps.y !== previousItemProps.y\r\n            || itemProps.width !== previousItemProps.width\r\n            || itemProps.height !== previousItemProps.height\r\n    },\r\n\r\n    onItemDragStart( itemProps ) {\r\n        if ( itemProps.glued )\r\n            return { \r\n                item: itemProps,\r\n                success: false\r\n            }\r\n\r\n        const placeholderStyles = this.getPlaceholderStyles( itemProps.position )\r\n\r\n        const item = {\r\n            ...itemProps,\r\n            meta: {\r\n                ...itemProps.meta,\r\n                isDragging: true,\r\n                placeholderStyles\r\n            }\r\n        }\r\n\r\n        return {\r\n            item,\r\n            success: true\r\n        }\r\n    },\r\n\r\n    ///\r\n    /// Handles all drag logic\r\n    ///\r\n    onItemDrag( itemProps, state, movementDetails ) {\r\n        const movementChange = {\r\n            ...this.calculateMovementChange( itemProps, state.gridOptions, state.gridSizing, movementDetails ),\r\n            newWidth: itemProps.width,\r\n            newHeight: itemProps.height,\r\n            newWidthPx: itemProps.position.widthPx,\r\n            newHeightPx: itemProps.position.heightPx\r\n        }\r\n\r\n        if ( !itemProps.meta.isDragging || itemProps.glued ){   \r\n            return this.getNoMovementResult( state, itemProps, movementChange )\r\n        }\r\n        else if ( !this.itemHasMoved( itemProps, movementChange ) ) {\r\n            return this.getNoMovementResult( state, itemProps, movementChange )\r\n        }\r\n\r\n        return this.onItemMovement( itemProps, state, movementChange )\r\n    },\r\n\r\n    onItemDragStop ( itemProps, items, gridWidth, gridHeight, gridOptions, gridSizing ) {\r\n        const { width, height, x, y } = itemProps\r\n        const { gridRows, gridColumns, renderMode } = gridOptions\r\n\r\n        const meta = { ...itemProps.meta, isDragging: false }\r\n\r\n        const position = this.getItemPosition( gridWidth, gridHeight, gridRows, gridColumns, width, height, x, y, renderMode )\r\n        const styles = this.getItemPositionStyles( gridOptions, itemProps.styles, position )\r\n\r\n        const updatedItem = { \r\n            ...itemProps,\r\n            position,\r\n            styles,\r\n            meta\r\n        }\r\n        \r\n        return updatedItem\r\n    },\r\n\r\n    onItemResizeStart( itemProps ) {\r\n        if ( itemProps.glued ) {\r\n            return { \r\n                item: itemProps,\r\n                success: false\r\n            }\r\n        }\r\n        \r\n        const item = {\r\n            ...itemProps,\r\n            meta: {\r\n                ...itemProps.meta,\r\n                isResizing: true,\r\n            }\r\n        }\r\n\r\n        return {\r\n            item,\r\n            success: true\r\n        }\r\n    },\r\n\r\n    onItemResize( itemProps, state, movementDetails ) {\r\n        const movementChange = {\r\n            ...this.calculateResizeChange( itemProps, state.gridOptions, state.gridSizing, movementDetails ),\r\n            newX: itemProps.x,\r\n            newY: itemProps.y,\r\n            newLeftPx: itemProps.position.leftPx,\r\n            newTopPx: itemProps.position.topPx,\r\n        }\r\n\r\n        if ( !itemProps.meta.isResizing || itemProps.glued ) {\r\n            return this.getNoMovementResult( state, itemProps, movementChange )\r\n        }\r\n        else if ( !this.itemHasResized( itemProps, movementChange ) ) {\r\n            return this.getNoMovementResult( state, itemProps, movementChange )\r\n        }\r\n\r\n        return this.onItemMovement( itemProps, state, movementChange )\r\n    },\r\n\r\n    onItemResizeStop ( itemProps, items, gridWidth, gridHeight, gridOptions, gridSizing ) {\r\n        const { width, height, x, y } = itemProps\r\n        const { gridRows, gridColumns, renderMode } = gridOptions\r\n\r\n        const meta = { ...itemProps.meta, isResizing: false }\r\n\r\n        const position = this.getItemPosition( gridWidth, gridHeight, gridRows, gridColumns, width, height, x, y, renderMode )\r\n        const styles = this.getItemPositionStyles( gridOptions, itemProps.styles, position )\r\n\r\n        const updatedItem = { \r\n            ...itemProps,\r\n            position,\r\n            styles,\r\n            meta\r\n        }\r\n\r\n        return updatedItem\r\n    },\r\n\r\n    ///\r\n    /// Updates the internal 2d grid with the new item position. itemProps should contain the current values, prior to being updated\r\n    ///\r\n    updateGridWithItemMovement( grid, itemProps, oldX, oldY, oldWidth, oldHeight ) {\r\n        const { id, x, y, width, height } = itemProps\r\n\r\n        this.ensureGridHasRow( grid, y )\r\n\r\n        this.setGridWithValue( grid, id, oldX, oldY, oldWidth, oldHeight, undefined, false )\r\n        this.setGridWithValue( grid, id, x, y, width, height, itemProps, true )\r\n    },\r\n\r\n    updateGridWithItem( grid, itemProps ) {\r\n        const { id, x, y, width, height } = itemProps\r\n\r\n        this.setGridWithValue( grid, id, x, y, width, height, itemProps, true )\r\n    },\r\n\r\n    removeGridItem( state, itemProps ) {\r\n        const { grid, items, gridOptions, gridSizing } = state\r\n        const { id, x, y, width, height } = itemProps\r\n        const { widthPx, heightPx } = gridSizing\r\n        const { renderMode } = gridOptions\r\n\r\n        this.ensureGridHasRow( grid, y )\r\n        this.setGridWithValue( grid, id, x, y, width, height, undefined, true )\r\n\r\n        // todo handle grid resize\r\n        const itemsReverted = gridOptions.algo.onGridItemRemoved( state, itemProps )\r\n\r\n        const updatedItems = items\r\n            .map( item => {\r\n                const revertDetails = itemsReverted.find( i => i.id === item.id )\r\n\r\n                if ( !revertDetails )\r\n                    return null\r\n                \r\n                const { x, y, width, height } = revertDetails\r\n\r\n                const movedItem = {\r\n                    ...item,\r\n                    x,\r\n                    y,\r\n                    width,\r\n                    height\r\n                }\r\n                \r\n                const position = this.getItemPosition( \r\n                    widthPx,\r\n                    heightPx, \r\n                    gridOptions.gridRows,\r\n                    gridOptions.gridColumns, \r\n                    width, \r\n                    height, \r\n                    x, \r\n                    y, \r\n                    renderMode \r\n                )\r\n    \r\n                movedItem.position = position\r\n                movedItem.styles = this.getItemPositionStyles( gridOptions, movedItem.styles, position )\r\n                \r\n                return movedItem\r\n            })\r\n            .filter( item => item != null )\r\n        \r\n        return {\r\n            updatedItems\r\n        }\r\n    },\r\n\r\n    ensureGridHasRow( grid, rowIndex ) {\r\n        if ( !grid[ rowIndex ] )\r\n            grid[ rowIndex ] = []\r\n    },\r\n\r\n    ///\r\n    /// Set the internal 2d grid with the value specified within the { x, x + width, y, y + height } range as long as the cell does not contain a different item already\r\n    ///\r\n    setGridWithValue( grid, id, x, y, width, height, value, overwrite = false ) {\r\n        for (let j = y; j < y + height; j++)\r\n            for (let i = x; i < x + width; i++) {\r\n                const cellValue = grid[ j ][ i ]\r\n                if ( !helpers.isDefined( cellValue ) || cellValue.id == id || overwrite )\r\n                    grid[ j ][ i ] = value\r\n            }\r\n    },\r\n\r\n    getItemPositionStyles( gridOptions, styles, position ) {\r\n        const { transform, left, top, ...otherStyles } = styles || {}\r\n\r\n        if ( position.ending === '%' ) {\r\n            return {\r\n                ...otherStyles,\r\n                left: `${ position.leftPct }%`,\r\n                top: `${ position.topPct }%`,\r\n                width: `${ position.widthPct }%`,\r\n                height: `${ position.heightPct }%`\r\n            }\r\n        }\r\n        else if ( gridOptions.enableCSS3 ) {\r\n            return {\r\n                ...otherStyles,\r\n                width: `${ position.widthPx }px`,\r\n                height: `${ position.heightPx }px`,\r\n                transform: `translate(${ position.leftPx }px, ${ position.topPx }px)`\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...otherStyles,\r\n            left: `${ position.leftPx }px`,\r\n            top: `${ position.topPx }px`,\r\n            width: `${ position.widthPx }px`,\r\n            height: `${ position.heightPx }px`\r\n        }\r\n    },\r\n\r\n    ///\r\n    /// Gets the internal grid x,y equivalent for the supplied top & left px values\r\n    ///\r\n    getGridXY( gridSizing, topPx, leftPx ) {\r\n        const { widthPx, heightPx, gridRows, gridColumns } = gridSizing\r\n        \r\n        const x = this.getGridPosition( gridWidth, leftPx, gridColumns )\r\n        const y = this.getGridPosition( gridHeight, topPx, gridRows )\r\n\r\n        return { x, y }\r\n    },\r\n\r\n    getGridWH( gridWidth, gridHeight, widthPx, heightPx, gridSizing ) {\r\n        const { gridRows, gridColumns } = gridSizing\r\n\r\n        const width = this.getGridPosition( gridWidth, widthPx, gridColumns )\r\n        const height = this.getGridPosition( gridHeight, heightPx, gridRows )\r\n\r\n        return { width, height }\r\n    },\r\n    \r\n    getGridPosition( gridPixels, itemPixels, matrixLevels ) {\r\n        return Math.max( 1, Math.round( itemPixels / gridPixels * matrixLevels ) )\r\n    },\r\n\r\n    getBoundaryLimitedSizing( currentLeftPx, currentTopPx, currentWidthPx, currentHeightPx, boundaries, gridOptions ) {\r\n        const { resizeGridDirections, itemsCanResizeGrid } = gridOptions\r\n        const { rightBoundary, bottomBoundary } = boundaries\r\n\r\n        const xResizeable = itemsCanResizeGrid && resizeGridDirections !== resizeOptions.y\r\n        const yResizeable = itemsCanResizeGrid && resizeGridDirections !== resizeOptions.x\r\n\r\n        const widthPx = xResizeable ? currentWidthPx : Math.min( currentWidthPx, rightBoundary - currentLeftPx )\r\n        const heightPx = yResizeable ? currentHeightPx : Math.min( currentHeightPx, bottomBoundary - currentTopPx )\r\n\r\n        return { widthPx, heightPx }\r\n    }\r\n}","const isDefined = ( item ) => {\r\n    return typeof item !== 'undefined' && item != null\r\n}\r\n\r\nconst objIsInArray = ( array, obj, key ) => {\r\n    const objKeyValue = obj[ key ]\r\n\r\n    return array.find(item => item[ key ] === objKeyValue) != null\r\n}\r\n\r\nexport default {\r\n    isDefined,\r\n    objIsInArray,\r\n}","const renderModeType = {\r\n    // flex = percentages\r\n    flex: 'flex',\r\n    // fixed = px\r\n    fixed: 'fixed'\r\n}\r\n\r\nconst resizeOptions = {\r\n    // boxes are fixed width\r\n    none: 'none',\r\n    // resize x direction only\r\n    x: 'x',\r\n    // resize y direction \r\n    y: 'y', \r\n    // resize both\r\n    both: 'both'\r\n}\r\n\r\nconst defaultItemOptions = {\r\n    x: 0,\r\n    y: 0,\r\n    width: 1,\r\n    height: 1,\r\n    className: 'grid-item',\r\n    glued: false,\r\n    // not yet supported but is partially done in the algo, do not alter\r\n    visible: true,\r\n    displayResize: true,\r\n    position: {\r\n        topPx: 0,\r\n        leftPx: 0,\r\n        topPct: 0,\r\n        leftPct: 0,\r\n        widthPx: 0,\r\n        heightPx: 0,\r\n        widthPct: 0,\r\n        heightPct: 0,\r\n        ending: 'px'\r\n    },\r\n    meta: {\r\n        isDragging: false,\r\n        isResizing: false\r\n    }\r\n}\r\n\r\nconst defaultPlaceholderStyles = {\r\n    position: 'absolute',\r\n    border: '2px dashed grey',\r\n    zIndex: -1,\r\n}\r\n\r\nconst defaultGridOptions = {\r\n    gridColumns: 12,\r\n    gridRows: 12,\r\n    width: '100%',\r\n    height: '100%',\r\n    className: 'curator-grid',\r\n    // whether to render the grid items using percentages or pixel values\r\n    renderMode: renderModeType.flex,\r\n    // when a dragged element pushes others out of the way, they may return to their \r\n    // old spot if dragging continues\r\n    stickyElements: true,\r\n    // show the grid lines: not currently supported\r\n    //showGrid: false,\r\n    // can resize the grid by dragging elements\r\n    itemsCanResizeGrid: true,\r\n    // which directions the grid can resize in (either dragging handle or items)\r\n    resizeGridDirections: resizeOptions.y,\r\n    // move items using transitions\r\n    useTransition: true,\r\n    // specific options for transitions\r\n    transitionDuration: 600,\r\n    // On an individual transition completed for an element (multiple fires when multiple elements moved)\r\n    onTransitionComplete: ( element, details, eventIfFired ) => { },\r\n    // On all transitions completed for a given element\r\n    onAllTransitionsComplete: ( element, details, eventIfFired ) => { },\r\n    // class name for the resize handle\r\n    resizeClassName: 'resize-handle',\r\n    enableCSS3: true,\r\n    algo: null,\r\n}\r\n\r\nexport {\r\n    renderModeType,\r\n    resizeOptions,\r\n    defaultItemOptions,\r\n    defaultGridOptions,\r\n    defaultPlaceholderStyles,\r\n}"],"sourceRoot":""}