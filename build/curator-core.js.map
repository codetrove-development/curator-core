{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./src/curator-core.js","webpack://[name]/./src/helpers.js","webpack://[name]/./src/options.js"],"names":["getItemStyles","boxSizing","position","getItemClasses","itemOptions","defaultItemOptions","gridOptions","defaultGridOptions","classes","itemClassName","glued","push","getEmptyGrid","gridRows","Array","from","_","getItemPosition","gridWidth","gridHeight","gridCols","width","height","left","top","renderMode","flex","renderModeType","getItemPositionPixels","getItemPositionPercentages","leftPct","topPct","widthPct","heightPct","ending","widthPx","heightPx","topPx","leftPx","updateMovedItem","item","gridSizing","newX","newY","newWidth","newHeight","gridColumns","movedItem","console","error","key","x","y","styles","getItemPositionStyles","getUpdatedMovedItems","items","draggedItemId","newTopPx","newLeftPx","newWidthPx","newHeightPx","forEach","getUpdatedGridSizeItems","ignoreIds","map","indexOf","id","getGridBoundaries","leftBoundary","rightBoundary","topBoundary","bottomBoundary","getItemSizing","itemProps","pxPerColumn","pxPerRow","itemWidthPx","itemHeightPx","calculateGridMatrixSize","itemsCanResizeGrid","resizeGridDirections","canResizeX","canResizeY","rows","columns","rowsRequired","columnsRequired","Math","max","calculateGridSize","newRowCount","newColumnCount","newGridWidth","newGridHeight","calculateMovementChange","movementDetails","gridResizeable","xDiff","currentMouseX","initialMouseX","yDiff","currentMouseY","initialMouseY","initialLeft","initialTop","round","calculateResizeChange","initialWidth","initialHeight","calculatePositionChange","state","getNoMovementResult","movementChange","targetItem","updatedItems","success","grid","itemsMoved","itemHasMoved","itemHasResized","checkProposedGridSizing","proposedGridColumns","proposedGridRows","resizeOptions","getPlaceholderStyles","defaultPlaceholderStyles","addItemToGrid","onItemMovement","movementIsWithinBounds","defaultResult","draggedItem","dragResult","algo","run","gridResized","newSize","Object","keys","itemsToMove","placeholderStyles","meta","length","onItemPositionChanged","previousItemProps","positionChange","positionHasChanged","onItemDragStart","isDragging","onItemDrag","onItemDragStop","updatedItem","onItemResizeStart","isResizing","onItemResize","onItemResizeStop","updateGridWithItemMovement","oldX","oldY","oldWidth","oldHeight","ensureGridHasRow","setGridWithValue","undefined","updateGridWithItem","removeGridItem","itemsReverted","onGridItemRemoved","revertDetails","find","i","filter","rowIndex","value","overwrite","j","cellValue","helpers","isDefined","transform","otherStyles","enableCSS3","getGridXY","getGridPosition","getGridWH","gridPixels","itemPixels","matrixLevels","getBoundaryLimitedSizing","currentLeftPx","currentTopPx","currentWidthPx","currentHeightPx","boundaries","xResizeable","yResizeable","min","objIsInArray","array","obj","objKeyValue","fixed","none","both","visible","canResize","displayResize","border","zIndex","stickyElements","useTransition","transitionDuration","onTransitionComplete","element","details","eventIfFired","onAllTransitionsComplete","resizeClassName"],"mappings":"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","file":"curator-core.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"curator-core\"] = factory();\n\telse\n\t\troot[\"curator-core\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/curator-core.js\");\n","\r\n\r\n// Snapper core is responsible for handling all logic for interacting with the grid\r\n// except:\r\n// 1. direct ui manipulation (responsibility of the wrapper)\r\n// 2. internal grid determination (responsibility of the algorithm)\r\n// 3. Maintenence of state (responsibility of the wrapper)\r\nimport helpers from './helpers'\r\nimport { \r\n    renderModeType, \r\n    resizeOptions, \r\n    defaultItemOptions, \r\n    defaultGridOptions ,\r\n    defaultPlaceholderStyles,\r\n} from './options'\r\n\r\nexport default {\r\n    getItemStyles() {\r\n        return {\r\n            boxSizing: 'border-box',\r\n            position: 'absolute'\r\n        }\r\n    },\r\n\r\n    getItemClasses( itemOptions = defaultItemOptions, gridOptions = defaultGridOptions ) {\r\n        const classes = [ ...itemOptions.classes, gridOptions.itemClassName ]\r\n\r\n        if ( itemOptions.glued ) {\r\n            classes.push('snapper-glued')\r\n        }\r\n\r\n        return classes\r\n    },\r\n\r\n    getEmptyGrid( gridRows ) {\r\n        return Array.from( Array( gridRows ), _ => [] );\r\n    },\r\n\r\n    /// \r\n    /// Calculate the position of the item within the grid\r\n    ///\r\n    getItemPosition(gridWidth, gridHeight, gridRows, gridCols, width, height, left, top, renderMode) {\r\n        const flex = ( renderMode === renderModeType.flex )\r\n\r\n        // even though the container could change and these calculations need to rerun on that event,\r\n        // it looks much nicer if theyre percentages on the widgets - even if it temporarily gives a 1px gap\r\n        // and then closes the gap on mouse up, than having px values \r\n        if (flex) {\r\n           return {\r\n               ...this.getItemPositionPixels( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top ),\r\n               ...this.getItemPositionPercentages( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top ),\r\n           }\r\n        }\r\n        else {\r\n            return this.getItemPositionPixels( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top )\r\n        }\r\n    },\r\n\r\n    getItemPositionPercentages( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top ) {\r\n        const leftPct = left / gridCols * 100\r\n        const topPct = top / gridRows * 100\r\n        const widthPct = width / gridCols * 100\r\n        const heightPct = height / gridRows * 100\r\n\r\n        const ending = '%'\r\n\r\n        return { leftPct, widthPct, topPct, heightPct, ending }\r\n    },\r\n\r\n    getItemPositionPixels( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top ) {\r\n        const widthPx = gridWidth / gridCols * width\r\n        const heightPx = gridHeight / gridRows * height\r\n        const topPx = gridHeight / gridRows * top\r\n        const leftPx = gridWidth / gridCols * left\r\n\r\n        const ending = 'px';\r\n\r\n        return { widthPx, heightPx, topPx, leftPx, ending }\r\n    },\r\n\r\n    updateMovedItem( item, gridSizing, gridOptions ) {\r\n        const { newX, newY, newWidth, newHeight } = item\r\n        const { widthPx, heightPx, gridRows, gridColumns } = gridSizing\r\n        const renderMode = gridOptions.renderMode\r\n        const movedItem = { ...item }\r\n\r\n        if ( ! ( newWidth && newHeight ) ) {\r\n            // todo\r\n            console.error( `Item ${ key } does not have a newWidth or newHeight value. Unable to correctly resize item`)\r\n            return item\r\n        }\r\n\r\n        // update the values with the set new values\r\n        movedItem.x = newX\r\n        movedItem.y = newY\r\n        movedItem.width = newWidth\r\n        movedItem.height = newHeight\r\n\r\n        const position = this.getItemPosition( gridWidth, gridHeight, gridRows, gridColumns, movedItem.width, movedItem.height, movedItem.x, movedItem.y, renderMode )\r\n        const styles = this.getItemPositionStyles( gridOptions, movedItem.styles, position )\r\n\r\n        movedItem.position = { ...position }\r\n        movedItem.styles = { ...styles }\r\n\r\n        return movedItem\r\n    },\r\n\r\n    getUpdatedMovedItems( items, draggedItemId, newTopPx, newLeftPx, newWidthPx, newHeightPx, gridSizing, gridOptions ) {\r\n        return items.forEach(item => {\r\n            const movedItem = this.updateMovedItem( item, gridSizing, gridOptions )\r\n\r\n            if ( key === draggedItemId ) {\r\n                // todo sync the %\r\n                const position = {\r\n                    ...movedItem.position,\r\n                    ending: 'px',\r\n                    topPx: newTopPx,\r\n                    leftPx: newLeftPx,\r\n                    widthPx: newWidthPx,\r\n                    heightPx: newHeightPx\r\n                }\r\n\r\n                const styles = this.getItemPositionStyles( gridOptions, movedItem.styles, position )\r\n\r\n                movedItem.position = { ...position }\r\n                movedItem.styles = { ...styles }\r\n            }\r\n\r\n            return movedItem\r\n        })\r\n    },\r\n\r\n    getUpdatedGridSizeItems( items, gridOptions, gridSizing, ignoreIds = [] ) {\r\n        const { gridRows, gridColumns, renderMode } = gridOptions\r\n        const { heightPx, widthPx } = gridSizing \r\n\r\n        return items.map( ( item ) => {\r\n            \r\n            if ( ignoreIds.indexOf( item.id ) > -1 )\r\n                return\r\n\r\n            const position = this.getItemPosition( widthPx, heightPx, gridRows, gridColumns, item.width, item.height, item.x, item.y, renderMode )\r\n            const styles = this.getItemPositionStyles( gridOptions, item.styles, position )\r\n\r\n            return {\r\n                ...item,\r\n                position,\r\n                styles\r\n            }\r\n        })\r\n    },\r\n\r\n    getGridBoundaries( gridSizing ) {\r\n        const { widthPx, heightPx } = gridSizing\r\n\r\n        return {\r\n            leftBoundary: 0,\r\n            rightBoundary: widthPx,\r\n            topBoundary: 0,\r\n            bottomBoundary: heightPx\r\n        }\r\n    },\r\n\r\n    getItemSizing( itemProps, gridSizing ) {\r\n        const { widthPx, heightPx } = gridSizing\r\n        const { width, height } = itemProps\r\n        const pxPerColumn = widthPx / gridColumns\r\n        const pxPerRow = heightPx / gridRows\r\n        const itemWidthPx = width * pxPerColumn\r\n        const itemHeightPx = height * pxPerRow\r\n\r\n        return { itemWidthPx, itemHeightPx }\r\n    },\r\n\r\n    calculateGridMatrixSize( items, gridOptions, gridSizing ) {\r\n        const { itemsCanResizeGrid, resizeGridDirections } = gridOptions\r\n        const { gridRows, gridColumns } = gridSizing\r\n        const canResizeX = itemsCanResizeGrid && resizeGridDirections !== 'y'\r\n        const canResizeY = itemsCanResizeGrid && resizeGridDirections !== 'x'\r\n\r\n        if ( !( canResizeX || canResizeY ) ) {\r\n            return {\r\n                rows: gridRows,\r\n                columns: gridColumns\r\n            }\r\n        }\r\n\r\n        let rowsRequired = 0\r\n        let columnsRequired = 0\r\n\r\n        items.forEach(item => {\r\n            const rightBoundary = item.x + item.width\r\n            const bottomBoundary = item.y + item.height\r\n\r\n            if ( rightBoundary > columnsRequired )\r\n                columnsRequired = rightBoundary\r\n\r\n            if ( bottomBoundary > rowsRequired )\r\n                rowsRequired = bottomBoundary\r\n        })\r\n\r\n        return {\r\n            rows: canResizeY ? Math.max( rowsRequired, gridRows ) : gridRows,\r\n            columns: canResizeX ? Math.max( columnsRequired, gridColumns ) : gridColumns\r\n        }\r\n    },\r\n\r\n    calculateGridSize( gridSizing, gridOptions, newRowCount, newColumnCount ) {\r\n        const {  gridRows, gridColumns, } = gridOptions \r\n        const { widthPx, heightPx } = gridSizing\r\n        \r\n        const newGridWidth = ( widthPx / gridColumns ) * newColumnCount\r\n        const newGridHeight = ( heightPx / gridRows ) * newRowCount\r\n\r\n        return {\r\n            newGridWidth,\r\n            newGridHeight\r\n        }\r\n    },\r\n\r\n    calculateMovementChange( itemProps, gridOptions, gridSizing, movementDetails  ) {\r\n        const gridResizeable = gridOptions.itemsCanResizeGrid\r\n        const canResizeX = gridResizeable && gridOptions.resizeGridDirections !== 'y'\r\n        const canResizeY = gridResizeable && gridOptions.resizeGridDirections !== 'x'\r\n\r\n        const pxPerColumn = gridSizing.widthPx / gridOptions.gridColumns\r\n        const pxPerRow = gridSizing.heightPx / gridOptions.gridRows\r\n        const xDiff = movementDetails.currentMouseX - movementDetails.initialMouseX\r\n        const yDiff = movementDetails.currentMouseY - movementDetails.initialMouseY\r\n        \r\n        let newLeftPx = movementDetails.initialLeft + xDiff\r\n        let newTopPx = movementDetails.initialTop + yDiff\r\n        let newX = Math.round( newLeftPx / pxPerColumn )\r\n        let newY = Math.round( newTopPx / pxPerRow )\r\n\r\n        if ( newX < 0 ) {\r\n            newX = 0\r\n        }\r\n        else if ( newX + 1 > gridOptions.gridColumns && !canResizeX ) {\r\n            newX = gridOptions.gridColumns - 1\r\n        }\r\n\r\n        if ( newY < 0 ) {\r\n            newY = 0\r\n        }\r\n        else if ( newY + 1 > gridOptions.gridRows && !canResizeY ) {\r\n            newY = gridOptions.gridRows - 1\r\n        }\r\n\r\n        return {\r\n            newX,\r\n            newY,\r\n            newLeftPx,\r\n            newTopPx,\r\n        }\r\n    },\r\n\r\n    calculateResizeChange( itemProps, gridOptions, gridSizing, movementDetails  ) {\r\n        const pxPerColumn = gridSizing.widthPx / gridOptions.gridColumns\r\n        const pxPerRow = gridSizing.heightPx / gridOptions.gridRows\r\n        const xDiff = movementDetails.currentMouseX - movementDetails.initialMouseX\r\n        const yDiff = movementDetails.currentMouseY - movementDetails.initialMouseY\r\n        \r\n        let newWidthPx = movementDetails.initialWidth + xDiff\r\n        let newHeightPx = movementDetails.initialHeight + yDiff\r\n        let newWidth = Math.round( newWidthPx / pxPerColumn )\r\n        let newHeight = Math.round( newHeightPx / pxPerRow )\r\n\r\n        if ( newWidthPx < pxPerColumn ) {\r\n            newWidth = 1\r\n            newWidthPx = pxPerColumn\r\n        }\r\n\r\n        if ( newHeightPx < pxPerRow ) {\r\n            newHeight = 1\r\n            newHeightPx = pxPerRow\r\n        }\r\n\r\n        return {\r\n            newWidthPx,\r\n            newHeightPx,\r\n            newWidth,\r\n            newHeight,\r\n            newLeftPx: itemProps.position.leftPx,\r\n            newTopPx: itemProps.position.topPx\r\n        }\r\n    },\r\n\r\n    calculatePositionChange( itemProps, state ) {\r\n        const { gridSizing, gridOptions } = state\r\n\r\n        const pxPerColumn = gridSizing.widthPx / gridOptions.gridColumns\r\n        const pxPerRow = gridSizing.heightPx / gridOptions.gridRows\r\n\r\n        return {\r\n            newWidthPx: Math.round( pxPerColumn * itemProps.width ),\r\n            newHeightPx: Math.round( pxPerRow * itemProps.height ),\r\n            newLeftPx: Math.round( pxPerColumn * itemProps.x ),\r\n            newTopPx: Math.round( pxPerRow * itemProps.y ),\r\n            newX: itemProps.x,\r\n            newY: itemProps.y,\r\n            newWidth: itemProps.width,\r\n            newHeight: itemProps.height,\r\n        }\r\n    },\r\n\r\n    getNoMovementResult( state, itemProps, movementChange ) {\r\n        const targetItem = {\r\n            ...itemProps,\r\n            position: {\r\n                ...itemProps.position,\r\n                ending: 'px',\r\n                topPx: movementChange.newTopPx, // todo this is wrong\r\n                leftPx: movementChange.newLeftPx,\r\n                widthPx: movementChange.newWidthPx,\r\n                heightPx: movementChange.newHeightPx\r\n            }\r\n        }\r\n\r\n        const updatedItems = state.items.map(item => {\r\n            if ( item.id == targetItem.id ) {\r\n                return targetItem\r\n            }\r\n\r\n            return item\r\n        })\r\n\r\n        return {\r\n            success: true, // todo should this be false?\r\n            grid: state.grid,\r\n            updatedItems,\r\n            targetItem,\r\n            gridSizing: state.gridSizing,\r\n            movementChange,\r\n            itemsMoved: false\r\n        }\r\n    },\r\n\r\n    itemHasMoved( itemProps, movementChange ) {\r\n        return ( movementChange.newX != itemProps.x ) || ( movementChange.newY != itemProps.y )\r\n    },\r\n\r\n    itemHasResized( itemProps, movementChange ) {\r\n        return ( movementChange.newWidth !== itemProps.width ) || ( movementChange.newHeight !== itemProps.height ) \r\n    },\r\n\r\n    checkProposedGridSizing( state, proposedGridColumns, proposedGridRows ) {\r\n        const {  gridOptions } = state\r\n        const { itemsCanResizeGrid, resizeGridDirections } = gridOptions\r\n\r\n        const canResizeX = ( itemsCanResizeGrid && resizeGridDirections !== resizeOptions.y )\r\n        const canResizeY = ( itemsCanResizeGrid && resizeGridDirections !== resizeOptions.x )\r\n\r\n        if ( ( !canResizeX && proposedGridColumns !== gridOptions.gridColumns ) || gridOptions.gridColumns < 1 )\r\n            throw 'Invalid grid column proposition from algorithm'\r\n\r\n        else if ( ( !canResizeY && proposedGridRows !== gridOptions.gridRows ) || gridOptions.gridRows < 1 )\r\n            throw 'Invalid grid row proposition from algorithm'\r\n    },\r\n\r\n    getPlaceholderStyles( position ) {\r\n        return {\r\n            ...defaultPlaceholderStyles,\r\n            left: `${ position.leftPx }px`,\r\n            top: `${ position.topPx }px`,\r\n            width: `${ position.widthPx }px`,\r\n            height: `${ position.heightPx }px`\r\n        }\r\n    },\r\n\r\n    addItemToGrid( itemProps, state ) {\r\n        const movementChange = {\r\n            newX: itemProps.x,\r\n            newY: itemProps.y,\r\n            newWidth: itemProps.width,\r\n            newHeight: itemProps.height,\r\n            newTopPx: itemProps.position.topPx,\r\n            newLeftPx: itemProps.position.leftPx,\r\n            newWidthPx: itemProps.position.widthPx,\r\n            newHeightPx: itemProps.position.heightPx\r\n        }\r\n\r\n        return this.onItemMovement( itemProps, state, movementChange )\r\n    },\r\n\r\n    movementIsWithinBounds( movementChange, gridOptions ) {\r\n        const { \r\n            gridColumns, \r\n            gridRows, \r\n            itemsCanResizeGrid, \r\n            resizeGridDirections \r\n        } = gridOptions\r\n\r\n        const {\r\n            newX,\r\n            newY,\r\n            newWidth,\r\n            newHeight\r\n        } = movementChange\r\n\r\n        const canResizeX = itemsCanResizeGrid && resizeGridDirections !== 'y'\r\n        const canResizeY = itemsCanResizeGrid && resizeGridDirections !== 'x'\r\n\r\n        return ( canResizeX || ( newX + newWidth <= gridColumns ) )\r\n            && ( canResizeY || ( newY + newHeight <= gridRows  ) )\r\n    },\r\n\r\n    onItemMovement( itemProps, state, movementChange ) {\r\n        const renderMode = state.gridOptions.renderMode\r\n        const { gridOptions } = state\r\n        const defaultResult = this.getNoMovementResult( state, itemProps, movementChange )\r\n        const draggedItem = { ...itemProps }\r\n\r\n        if ( !this.movementIsWithinBounds( movementChange, gridOptions ) ) {\r\n            return defaultResult\r\n        }\r\n\r\n        const dragResult = gridOptions.algo.run( state, draggedItem, movementChange.newX, movementChange.newY, movementChange.newWidth, movementChange.newHeight )\r\n        \r\n        if ( !dragResult.success ){\r\n            return defaultResult\r\n        }\r\n\r\n        const gridResized = ( dragResult.gridColumns !== gridOptions.gridColumns ) \r\n            || ( dragResult.gridRows !== gridOptions.gridRows )\r\n\r\n        let gridWidth = state.gridSizing.widthPx\r\n        let gridHeight = state.gridSizing.heightPx\r\n        \r\n        if ( gridResized ) {\r\n            this.checkProposedGridSizing( state, dragResult.gridColumns, dragResult.gridRows )\r\n            const newSize = this.calculateGridSize( state.gridSizing, gridOptions, dragResult.gridRows, dragResult.gridColumns )\r\n            gridWidth = newSize.newGridWidth\r\n            gridHeight = newSize.newGridHeight\r\n        }\r\n\r\n        const updatedItems = Object.keys( dragResult.itemsToMove )\r\n            .map(key => {\r\n                const movedItem = dragResult.itemsToMove[ key ]\r\n\r\n                const position = this.getItemPosition( \r\n                    gridWidth, \r\n                    gridHeight, \r\n                    dragResult.gridRows,\r\n                    dragResult.gridColumns, \r\n                    movedItem.width, \r\n                    movedItem.height, \r\n                    movedItem.x, \r\n                    movedItem.y, \r\n                    renderMode \r\n                )\r\n    \r\n                // without these the item will jitter\r\n                if ( movedItem.id === draggedItem.id ) {\r\n                    const placeholderStyles = this.getPlaceholderStyles( position )\r\n    \r\n                    movedItem.meta = {\r\n                        ...movedItem.meta,\r\n                        placeholderStyles\r\n                    }\r\n    \r\n                    movedItem.position = {\r\n                        ...movedItem.position,\r\n                        ending: 'px',\r\n                        topPx: movementChange.newTopPx,\r\n                        leftPx: movementChange.newLeftPx,\r\n                        widthPx: movementChange.newWidthPx,\r\n                        heightPx: movementChange.newHeightPx\r\n                    }\r\n    \r\n                    movedItem.styles = this.getItemPositionStyles( gridOptions, movedItem.styles, movedItem.position )\r\n                    //console.log( movedItem.styles )\r\n                }\r\n                else {\r\n                    movedItem.position = position\r\n                    movedItem.styles = this.getItemPositionStyles( gridOptions, movedItem.styles, position )\r\n                }\r\n                \r\n                return movedItem\r\n            })\r\n\r\n        return {\r\n            success: dragResult.success,\r\n            grid: state.grid,\r\n            updatedItems,\r\n            itemsMoved: Object.keys( dragResult.itemsToMove ).length > 1,\r\n            targetItem: draggedItem,\r\n            movementChange,\r\n            gridSizing: {\r\n                gridRows: dragResult.gridRows,\r\n                gridColumns: dragResult.gridColumns,\r\n                heightPx: gridHeight,\r\n                widthPx: gridWidth\r\n            }\r\n        }\r\n    },\r\n\r\n    onItemPositionChanged( itemProps, previousItemProps, state ) {\r\n        const positionChange = this.calculatePositionChange( itemProps, state ) \r\n\r\n        if ( !this.positionHasChanged( itemProps, previousItemProps )) {\r\n            return this.getNoMovementResult( state, previousItemProps, positionChange )\r\n        }      \r\n\r\n        return this.onItemMovement( previousItemProps, state, positionChange )\r\n    },\r\n\r\n    positionHasChanged( itemProps, previousItemProps ) {\r\n        return itemProps.x !== previousItemProps.x\r\n            || itemProps.y !== previousItemProps.y\r\n            || itemProps.width !== previousItemProps.width\r\n            || itemProps.height !== previousItemProps.height\r\n    },\r\n\r\n    onItemDragStart( itemProps ) {\r\n        if ( itemProps.glued )\r\n            return { \r\n                item: itemProps,\r\n                success: false\r\n            }\r\n\r\n        const placeholderStyles = this.getPlaceholderStyles( itemProps.position )\r\n\r\n        const item = {\r\n            ...itemProps,\r\n            meta: {\r\n                ...itemProps.meta,\r\n                isDragging: true,\r\n                placeholderStyles\r\n            }\r\n        }\r\n\r\n        return {\r\n            item,\r\n            success: true\r\n        }\r\n    },\r\n\r\n    ///\r\n    /// Handles all drag logic\r\n    ///\r\n    onItemDrag( itemProps, state, movementDetails ) {\r\n        const movementChange = {\r\n            ...this.calculateMovementChange( itemProps, state.gridOptions, state.gridSizing, movementDetails ),\r\n            newWidth: itemProps.width,\r\n            newHeight: itemProps.height,\r\n            newWidthPx: itemProps.position.widthPx,\r\n            newHeightPx: itemProps.position.heightPx\r\n        }\r\n\r\n        if ( !itemProps.meta.isDragging || itemProps.glued ){   \r\n            return this.getNoMovementResult( state, itemProps, movementChange )\r\n        }\r\n        else if ( !this.itemHasMoved( itemProps, movementChange ) ) {\r\n            return this.getNoMovementResult( state, itemProps, movementChange )\r\n        }\r\n\r\n        return this.onItemMovement( itemProps, state, movementChange )\r\n    },\r\n\r\n    onItemDragStop ( itemProps, items, gridWidth, gridHeight, gridOptions, gridSizing ) {\r\n        const { width, height, x, y } = itemProps\r\n        const { gridRows, gridColumns, renderMode } = gridOptions\r\n\r\n        const meta = { ...itemProps.meta, isDragging: false }\r\n\r\n        const position = this.getItemPosition( gridWidth, gridHeight, gridRows, gridColumns, width, height, x, y, renderMode )\r\n        const styles = this.getItemPositionStyles( gridOptions, itemProps.styles, position )\r\n\r\n        const updatedItem = { \r\n            ...itemProps,\r\n            position,\r\n            styles,\r\n            meta\r\n        }\r\n        \r\n        return updatedItem\r\n    },\r\n\r\n    onItemResizeStart( itemProps ) {\r\n        if ( itemProps.glued ) {\r\n            return { \r\n                item: itemProps,\r\n                success: false\r\n            }\r\n        }\r\n        \r\n        const item = {\r\n            ...itemProps,\r\n            meta: {\r\n                ...itemProps.meta,\r\n                isResizing: true,\r\n            }\r\n        }\r\n\r\n        return {\r\n            item,\r\n            success: true\r\n        }\r\n    },\r\n\r\n    onItemResize( itemProps, state, movementDetails ) {\r\n        const movementChange = {\r\n            ...this.calculateResizeChange( itemProps, state.gridOptions, state.gridSizing, movementDetails ),\r\n            newX: itemProps.x,\r\n            newY: itemProps.y,\r\n            newLeftPx: itemProps.position.leftPx,\r\n            newTopPx: itemProps.position.topPx,\r\n        }\r\n\r\n        if ( !itemProps.meta.isResizing || itemProps.glued ) {\r\n            return this.getNoMovementResult( state, itemProps, movementChange )\r\n        }\r\n        else if ( !this.itemHasResized( itemProps, movementChange ) ) {\r\n            return this.getNoMovementResult( state, itemProps, movementChange )\r\n        }\r\n\r\n        return this.onItemMovement( itemProps, state, movementChange )\r\n    },\r\n\r\n    onItemResizeStop ( itemProps, items, gridWidth, gridHeight, gridOptions, gridSizing ) {\r\n        const { width, height, x, y } = itemProps\r\n        const { gridRows, gridColumns, renderMode } = gridOptions\r\n\r\n        const meta = { ...itemProps.meta, isResizing: false }\r\n\r\n        const position = this.getItemPosition( gridWidth, gridHeight, gridRows, gridColumns, width, height, x, y, renderMode )\r\n        const styles = this.getItemPositionStyles( gridOptions, itemProps.styles, position )\r\n\r\n        const updatedItem = { \r\n            ...itemProps,\r\n            position,\r\n            styles,\r\n            meta\r\n        }\r\n\r\n        return updatedItem\r\n    },\r\n\r\n    ///\r\n    /// Updates the internal 2d grid with the new item position. itemProps should contain the current values, prior to being updated\r\n    ///\r\n    updateGridWithItemMovement( grid, itemProps, oldX, oldY, oldWidth, oldHeight ) {\r\n        const { id, x, y, width, height } = itemProps\r\n\r\n        this.ensureGridHasRow( grid, y )\r\n\r\n        this.setGridWithValue( grid, id, oldX, oldY, oldWidth, oldHeight, undefined, false )\r\n        this.setGridWithValue( grid, id, x, y, width, height, itemProps, true )\r\n    },\r\n\r\n    updateGridWithItem( grid, itemProps ) {\r\n        const { id, x, y, width, height } = itemProps\r\n\r\n        this.setGridWithValue( grid, id, x, y, width, height, itemProps, true )\r\n    },\r\n\r\n    removeGridItem( state, itemProps ) {\r\n        const { grid, items, gridOptions, gridSizing } = state\r\n        const { id, x, y, width, height } = itemProps\r\n        const { widthPx, heightPx } = gridSizing\r\n        const { renderMode } = gridOptions\r\n\r\n        this.ensureGridHasRow( grid, y )\r\n        this.setGridWithValue( grid, id, x, y, width, height, undefined, true )\r\n\r\n        // todo handle grid resize\r\n        const itemsReverted = gridOptions.algo.onGridItemRemoved( state, itemProps )\r\n\r\n        const updatedItems = items\r\n            .map( item => {\r\n                const revertDetails = itemsReverted.find( i => i.id === item.id )\r\n\r\n                if ( !revertDetails )\r\n                    return null\r\n                \r\n                const { x, y, width, height } = revertDetails\r\n\r\n                const movedItem = {\r\n                    ...item,\r\n                    x,\r\n                    y,\r\n                    width,\r\n                    height\r\n                }\r\n                \r\n                const position = this.getItemPosition( \r\n                    widthPx,\r\n                    heightPx, \r\n                    gridOptions.gridRows,\r\n                    gridOptions.gridColumns, \r\n                    width, \r\n                    height, \r\n                    x, \r\n                    y, \r\n                    renderMode \r\n                )\r\n    \r\n                movedItem.position = position\r\n                movedItem.styles = this.getItemPositionStyles( gridOptions, movedItem.styles, position )\r\n                \r\n                return movedItem\r\n            })\r\n            .filter( item => item != null )\r\n        \r\n        return {\r\n            updatedItems\r\n        }\r\n    },\r\n\r\n    ensureGridHasRow( grid, rowIndex ) {\r\n        if ( !grid[ rowIndex ] )\r\n            grid[ rowIndex ] = []\r\n    },\r\n\r\n    ///\r\n    /// Set the internal 2d grid with the value specified within the { x, x + width, y, y + height } range as long as the cell does not contain a different item already\r\n    ///\r\n    setGridWithValue( grid, id, x, y, width, height, value, overwrite = false ) {\r\n        for (let j = y; j < y + height; j++)\r\n            for (let i = x; i < x + width; i++) {\r\n                const cellValue = grid[ j ][ i ]\r\n                if ( !helpers.isDefined( cellValue ) || cellValue.id == id || overwrite )\r\n                    grid[ j ][ i ] = value\r\n            }\r\n    },\r\n\r\n    getItemPositionStyles( gridOptions, styles, position ) {\r\n        const { transform, left, top, ...otherStyles } = styles || {}\r\n\r\n        if ( position.ending === '%' ) {\r\n            return {\r\n                ...otherStyles,\r\n                left: `${ position.leftPct }%`,\r\n                top: `${ position.topPct }%`,\r\n                width: `${ position.widthPct }%`,\r\n                height: `${ position.heightPct }%`\r\n            }\r\n        }\r\n        else if ( gridOptions.enableCSS3 ) {\r\n            return {\r\n                ...otherStyles,\r\n                width: `${ position.widthPx }px`,\r\n                height: `${ position.heightPx }px`,\r\n                transform: `translate(${ position.leftPx }px, ${ position.topPx }px)`\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...otherStyles,\r\n            left: `${ position.leftPx }px`,\r\n            top: `${ position.topPx }px`,\r\n            width: `${ position.widthPx }px`,\r\n            height: `${ position.heightPx }px`\r\n        }\r\n    },\r\n\r\n    ///\r\n    /// Gets the internal grid x,y equivalent for the supplied top & left px values\r\n    ///\r\n    getGridXY( gridSizing, topPx, leftPx ) {\r\n        const { widthPx, heightPx, gridRows, gridColumns } = gridSizing\r\n        \r\n        const x = this.getGridPosition( gridWidth, leftPx, gridColumns )\r\n        const y = this.getGridPosition( gridHeight, topPx, gridRows )\r\n\r\n        return { x, y }\r\n    },\r\n\r\n    getGridWH( gridWidth, gridHeight, widthPx, heightPx, gridSizing ) {\r\n        const { gridRows, gridColumns } = gridSizing\r\n\r\n        const width = this.getGridPosition( gridWidth, widthPx, gridColumns )\r\n        const height = this.getGridPosition( gridHeight, heightPx, gridRows )\r\n\r\n        return { width, height }\r\n    },\r\n    \r\n    getGridPosition( gridPixels, itemPixels, matrixLevels ) {\r\n        return Math.max( 1, Math.round( itemPixels / gridPixels * matrixLevels ) )\r\n    },\r\n\r\n    getBoundaryLimitedSizing( currentLeftPx, currentTopPx, currentWidthPx, currentHeightPx, boundaries, gridOptions ) {\r\n        const { resizeGridDirections, itemsCanResizeGrid } = gridOptions\r\n        const { rightBoundary, bottomBoundary } = boundaries\r\n\r\n        const xResizeable = itemsCanResizeGrid && resizeGridDirections !== resizeOptions.y\r\n        const yResizeable = itemsCanResizeGrid && resizeGridDirections !== resizeOptions.x\r\n\r\n        const widthPx = xResizeable ? currentWidthPx : Math.min( currentWidthPx, rightBoundary - currentLeftPx )\r\n        const heightPx = yResizeable ? currentHeightPx : Math.min( currentHeightPx, bottomBoundary - currentTopPx )\r\n\r\n        return { widthPx, heightPx }\r\n    }\r\n}","const isDefined = ( item ) => {\r\n    return typeof item !== 'undefined' && item != null\r\n}\r\n\r\nconst objIsInArray = ( array, obj, key ) => {\r\n    const objKeyValue = obj[ key ]\r\n\r\n    return array.find(item => item[ key ] === objKeyValue) != null\r\n}\r\n\r\nexport default {\r\n    isDefined,\r\n    objIsInArray,\r\n}","const renderModeType = {\r\n    // flex = percentages\r\n    flex: 'flex',\r\n    // fixed = px\r\n    fixed: 'fixed'\r\n}\r\n\r\nconst resizeOptions = {\r\n    // boxes are fixed width\r\n    none: 'none',\r\n    // resize x direction only\r\n    x: 'x',\r\n    // resize y direction \r\n    y: 'y', \r\n    // resize both\r\n    both: 'both'\r\n}\r\n\r\nconst defaultItemOptions = {\r\n    x: 0,\r\n    y: 0,\r\n    width: 1,\r\n    height: 1,\r\n    classes: [],\r\n    glued: false,\r\n    // not yet supported but is partially done in the algo, do not alter\r\n    visible: true,\r\n    canResize: true,\r\n    displayResize: true,\r\n    position: {\r\n        topPx: 0,\r\n        leftPx: 0,\r\n        topPct: 0,\r\n        leftPct: 0,\r\n        widthPx: 0,\r\n        heightPx: 0,\r\n        widthPct: 0,\r\n        heightPct: 0,\r\n        ending: 'px'\r\n    },\r\n    meta: {\r\n        isDragging: false,\r\n    }\r\n}\r\n\r\nconst defaultPlaceholderStyles = {\r\n    position: 'absolute',\r\n    border: '2px dashed grey',\r\n    zIndex: -1,\r\n}\r\n\r\nconst defaultGridOptions = {\r\n    gridColumns: 12,\r\n    gridRows: 12,\r\n    width: '100%',\r\n    height: '100%',\r\n    itemClassName: 'grid-item',\r\n    // any extra classes to add to the element\r\n    classes: [],\r\n    // whether to render the grid items using percentages or pixel values\r\n    renderMode: renderModeType.flex,\r\n    // when a dragged element pushes others out of the way, they may return to their \r\n    // old spot if dragging continues\r\n    stickyElements: true,\r\n    // show the grid lines: not currently supported\r\n    //showGrid: false,\r\n    // can resize the grid by dragging elements\r\n    itemsCanResizeGrid: true,\r\n    // which directions the grid can resize in (either dragging handle or items)\r\n    resizeGridDirections: resizeOptions.y,\r\n    // move items using transitions\r\n    useTransition: true,\r\n    // specific options for transitions\r\n    transitionDuration: 600,\r\n    // On an individual transition completed for an element (multiple fires when multiple elements moved)\r\n    onTransitionComplete: ( element, details, eventIfFired ) => { },\r\n    // On all transitions completed for a given element\r\n    onAllTransitionsComplete: ( element, details, eventIfFired ) => { },\r\n    // class name for the resize handle\r\n    resizeClassName: 'resize-handle',\r\n    enableCSS3: true,\r\n    algo: null,\r\n}\r\n\r\nexport {\r\n    renderModeType,\r\n    resizeOptions,\r\n    defaultItemOptions,\r\n    defaultGridOptions,\r\n    defaultPlaceholderStyles,\r\n}"],"sourceRoot":""}