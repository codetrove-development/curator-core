{"version":3,"sources":["webpack://SnapperCore/webpack/universalModuleDefinition","webpack://SnapperCore/webpack/bootstrap","webpack://SnapperCore/./src/helpers.js","webpack://SnapperCore/./src/options.js","webpack://SnapperCore/./src/snapper-core.js"],"names":["cloneProperties","obj","properties","deep","newObj","prop","indexOf","isPureObject","item","Object","prototype","toString","call","setDefaults","options","defaults","optionName","hasOwnProperty","getRelativePosition","element","container","containerPosition","_absolutePosition","elementPosition","top","left","parseBoolean","val","defaultVal","isDefined","toLowerCase","trim","objIsInArray","array","key","objKeyValue","i","length","absolutePosition","position","getBoundingClientRect","body","getBody","scrollTop","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","Math","round","getInnerSize","style","getComputedStyle","currentStyle","clientWidth","clientHeight","height","parseInt","paddingTop","paddingBottom","width","paddingLeft","paddingRight","renderModeType","flex","fixed","resizeOptions","none","x","y","both","defaultItemOptions","classes","glued","visible","canResize","displayResize","topPx","leftPx","topPct","leftPct","widthPx","heightPx","widthPct","heightPct","ending","meta","isDragging","pseudo","defaultPlaceholderStyles","border","zIndex","defaultGridOptions","gridColumns","gridRows","itemClassName","renderMode","stickyElements","itemsCanResizeGrid","resizeGridDirections","useTransition","transitionDuration","onTransitionComplete","details","eventIfFired","onAllTransitionsComplete","resizeClassName","enableCSS3","algorithm","getItemStyles","boxSizing","getItemClasses","itemOptions","push","getEmptyGrid","grid","r","getItemPosition","gridWidth","gridHeight","gridCols","getItemPositionPixels","getItemPositionPercentages","pxPerColFloored","floor","pxPerRowFloored","colRemainderPx","rowRemainderPx","widthPxOffset","heightPxOffset","extraLeft","min","extraWidth","extraTop","extraHeight","updateMovedItem","gridSizing","gridOptions","newX","newY","newWidth","newHeight","movedItem","console","error","styles","getItemPositionStyles","updateGridWithMovedItems","items","updateGridWithItemMovement","getUpdatedMovedItems","draggedItemId","newTopPx","newLeftPx","newWidthPx","newHeightPx","forEach","getUpdatedGridSizeItems","ignoreIds","map","id","getGridBoundaries","leftBoundary","rightBoundary","topBoundary","bottomBoundary","getItemSizing","itemProps","pxPerColumn","pxPerRow","itemWidthPx","itemHeightPx","calculateGridMatrixSize","canResizeX","canResizeY","rows","columns","rowsRequired","columnsRequired","max","calculateGridSize","newRowCount","newColumnCount","newGridWidth","newGridHeight","calculateMovementChange","movementDetails","gridResizeable","xDiff","currentMouseX","initialMouseX","yDiff","currentMouseY","initialMouseY","initialLeft","initialTop","calculateResizeChange","initialWidth","initialHeight","calculatePositionChange","state","getNoMovementResult","movementChange","targetItem","updatedItems","success","itemsMoved","itemHasMoved","itemHasResized","checkProposedGridSizing","proposedGridColumns","proposedGridRows","getPlaceholderStyles","addItemToGrid","onItemMovement","movementIsWithinBounds","defaultResult","draggedItem","dragResult","algo","run","gridResized","newSize","keys","itemsToMove","placeholderStyles","log","onItemPositionChanged","previousItemProps","positionChange","positionHasChanged","onItemDragStart","onItemDrag","onItemDragStop","updatedItem","onItemResizeStart","isResizing","onItemResize","onItemResizeStop","oldX","oldY","oldWidth","oldHeight","ensureGridHasRow","setGridWithValue","undefined","updateGridWithItem","removeGridItem","gridItems","itemsReverted","onGridItemRemoved","revertDetails","find","filter","rowIndex","value","overwrite","j","cellValue","helpers","transform","otherStyles","getGridXY","getGridPosition","getGridWH","gridPixels","itemPixels","matrixLevels","getBoundaryLimitedSizing","currentLeftPx","currentTopPx","currentWidthPx","currentHeightPx","boundaries","xResizeable","yResizeable"],"mappings":"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","file":"snapper-core.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SnapperCore\"] = factory();\n\telse\n\t\troot[\"SnapperCore\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/snapper-core.js\");\n","const cloneProperties = (obj, properties, deep = true, newObj = {}) => {\r\n    if ( !deep ) {\r\n        newObj = { ...obj }\r\n        return newObj\r\n    }\r\n        \r\n\r\n    for (let prop in obj) {\r\n        if (properties.indexOf( prop ) > -1) {\r\n\r\n            if (isPureObject( obj[properties] ))\r\n                cloneProperties(obj, properties, deep, newObj)\r\n\r\n            else\r\n                newObj[prop] = obj[prop]\r\n        }\r\n    }\r\n\r\n    return newObj\r\n}\r\n\r\nconst isPureObject = ( item ) => {\r\n    return Object.prototype.toString.call( item ) === '[object Object]'\r\n}\r\n\r\nconst setDefaults = (options = {}, defaults = {}) => {\r\n    for (let optionName in defaults) {\r\n        if (!options.hasOwnProperty(optionName)) {\r\n            options[optionName] = defaults[optionName]\r\n        }\r\n    }\r\n    return options\r\n}\r\n\r\nconst getRelativePosition = (element, container) => {\r\n    const containerPosition = _absolutePosition( container )\r\n    const elementPosition = _absolutePosition( element )\r\n\r\n    return {\r\n        top: elementPosition.top - containerPosition.top,\r\n        left: elementPosition.left - containerPosition.left\r\n    }\r\n}\r\n\r\nconst parseBoolean = ( val, defaultVal ) => {\r\n    if ( !isDefined( defaultVal ) )\r\n            throw 'snapper.parseBoolean can not be called without a default value provided'\r\n\r\n    if ( !isDefined( val ) )\r\n        return defaultVal\r\n\r\n    val = val.toString()\r\n        .toLowerCase()\r\n        .trim()\r\n\r\n    if ( val === 'true' )\r\n        return true\r\n\r\n    else if ( val === 'false' )\r\n        return false\r\n\r\n    else\r\n        return defaultVal\r\n}\r\n\r\nconst objIsInArray = (array, obj, key) => {\r\n    const objKeyValue = obj[ key ]\r\n\r\n    for ( let i = 0; i < array.length; i++ ) {\r\n        if ( array[ i ][ key ] === objKeyValue )\r\n            return true\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nconst isDefined = (item) => {\r\n    return typeof item !== 'undefined' && item != null\r\n}\r\n\r\nconst absolutePosition = (element) => {\r\n    const position = element.getBoundingClientRect()\r\n    const body = getBody( element )\r\n\r\n    // get the scroll top & left to add to the rect.top & left\r\n    // as the rect is relative to the viewport and ignores scroll position\r\n    const scrollTop = window.pageYOffset || body.scrollTop\r\n    const scrollLeft = window.pageXOffset || body.scrollLeft\r\n\r\n    // remove any offset the body has\r\n    const clientTop = body.clientTop || 0\r\n    const clientLeft = body.clientLeft || 0\r\n\r\n    return {\r\n        top: Math.round(position.top + scrollTop - clientTop),\r\n        left: Math.round(position.left + scrollLeft - clientLeft)\r\n    }\r\n}\r\n\r\n/// Returns { height: xx, width: xx } in px (inner values)\r\n// so excluding padding/margin/border\r\nconst getInnerSize = ( element ) => {\r\n    const style = window.getComputedStyle ? getComputedStyle(element, null) : element.currentStyle\r\n    // The width and height of the element including padding, excluding borders and margins.\r\n    const { clientWidth, clientHeight } = element\r\n\r\n    return {\r\n        height: clientHeight - parseInt( style.paddingTop ) - parseInt( style.paddingBottom ),\r\n        width: clientWidth - parseInt( style.paddingLeft ) - parseInt( style.paddingRight )\r\n    }\r\n}\r\n\r\nexport default {\r\n    cloneProperties,\r\n    isPureObject,\r\n    setDefaults,\r\n    getRelativePosition,\r\n    parseBoolean,\r\n    objIsInArray,\r\n    isDefined,\r\n    absolutePosition,\r\n    getInnerSize\r\n}","const renderModeType = {\r\n    // flex = percentages\r\n    flex: 'flex',\r\n    // fixed = px\r\n    fixed: 'fixed'\r\n}\r\n\r\nconst resizeOptions = {\r\n    // boxes are fixed width\r\n    none: 'none',\r\n    // resize x direction only\r\n    x: 'x',\r\n    // resize y direction \r\n    y: 'y', \r\n    // resize both\r\n    both: 'both'\r\n}\r\n\r\nconst defaultItemOptions = {\r\n    x: 0,\r\n    y: 0,\r\n    width: 1,\r\n    height: 1,\r\n    classes: [],\r\n    glued: false,\r\n    // not yet supported but is partially done in the algo, do not alter\r\n    visible: true,\r\n    canResize: true,\r\n    displayResize: true,\r\n    position: {\r\n        topPx: 0,\r\n        leftPx: 0,\r\n        topPct: 0,\r\n        leftPct: 0,\r\n        widthPx: 0,\r\n        heightPx: 0,\r\n        widthPct: 0,\r\n        heightPct: 0,\r\n        ending: 'px'\r\n    },\r\n    meta: {\r\n        isDragging: false,\r\n        pseudo: false,\r\n    }\r\n}\r\n\r\nconst defaultPlaceholderStyles = {\r\n    position: 'absolute',\r\n    border: '2px dashed grey',\r\n    zIndex: -1,\r\n}\r\n\r\nconst defaultGridOptions = {\r\n    gridColumns: 12,\r\n    gridRows: 12,\r\n    width: '100%',\r\n    height: '100%',\r\n    itemClassName: 'grid-item',\r\n    // any extra classes to add to the element\r\n    classes: [],\r\n    // whether to render the grid items using percentages or pixel values\r\n    renderMode: renderModeType.flex,\r\n    // when a dragged element pushes others out of the way, they may return to their \r\n    // old spot if dragging continues\r\n    stickyElements: true,\r\n    // show the grid lines: not currently supported\r\n    //showGrid: false,\r\n    // can resize the grid by dragging elements\r\n    itemsCanResizeGrid: true,\r\n    // which directions the grid can resize in (either dragging handle or items)\r\n    resizeGridDirections: resizeOptions.y,\r\n    // move items using transitions\r\n    useTransition: true,\r\n    // specific options for transitions\r\n    transitionDuration: 600,\r\n    // On an individual transition completed for an element (multiple fires when multiple elements moved)\r\n    onTransitionComplete: ( element, details, eventIfFired ) => { },\r\n    // On all transitions completed for a given element\r\n    onAllTransitionsComplete: ( element, details, eventIfFired ) => { },\r\n    // class name for the resize handle\r\n    resizeClassName: 'snap-resize-handle',\r\n    enableCSS3: true,\r\n    // todo document\r\n    algorithm: null,\r\n}\r\n\r\nexport {\r\n    renderModeType,\r\n    resizeOptions,\r\n    defaultItemOptions,\r\n    defaultGridOptions,\r\n    defaultPlaceholderStyles,\r\n}","\r\n\r\n// Snapper core is responsible for handling all logic for interacting with the grid\r\n// except:\r\n// 1. direct ui manipulation (responsibility of the wrapper)\r\n// 2. internal grid determination (responsibility of the algorithm)\r\n// 3. Maintenence of state (responsibility of the wrapper)\r\nimport helpers from './helpers'\r\nimport { \r\n    renderModeType, \r\n    resizeOptions, \r\n    defaultItemOptions, \r\n    defaultGridOptions ,\r\n    defaultPlaceholderStyles,\r\n} from './options'\r\n\r\nexport default {\r\n    getItemStyles() {\r\n        return {\r\n            boxSizing: 'border-box',\r\n            position: 'absolute'\r\n        }\r\n    },\r\n\r\n    getItemClasses( itemOptions = defaultItemOptions ) {\r\n        const classes = [ ...itemOptions.classes, itemOptions.itemClassName ]\r\n\r\n        if ( itemOptions.glued ) {\r\n            classes.push('snapper-glued')\r\n        }\r\n\r\n        return classes\r\n    },\r\n\r\n    getEmptyGrid( gridRows ) {\r\n        let grid = []\r\n\r\n        for( let r = 0; r < gridRows; r++ )\r\n            grid.push( [] )\r\n\r\n        return grid\r\n    },\r\n\r\n    /// \r\n    /// Calculate the position of the item within the grid\r\n    ///\r\n    getItemPosition(gridWidth, gridHeight, gridRows, gridCols, width, height, left, top, renderMode) {\r\n        const flex = ( renderMode === renderModeType.flex )\r\n\r\n        // even though the container could change and these calculations need to rerun on that event,\r\n        // it looks much nicer if theyre percentages on the widgets - even if it temporarily gives a 1px gap\r\n        // and then closes the gap on mouse up, than having px values \r\n        if (flex) {\r\n           return {\r\n               ...this.getItemPositionPixels( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top ),\r\n               ...this.getItemPositionPercentages( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top ),\r\n           }\r\n        }\r\n        else {\r\n            return this.getItemPositionPixels( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top )\r\n        }\r\n    },\r\n\r\n    getItemPositionPercentages( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top ) {\r\n        const pxPerColFloored = Math.floor(gridWidth / gridCols)\r\n        const pxPerRowFloored = Math.floor(gridHeight / gridRows)\r\n        const colRemainderPx = gridWidth - pxPerColFloored * gridCols\r\n        const rowRemainderPx = gridHeight - pxPerRowFloored * gridRows\r\n        // todo check if need to * by required precision and floor to avoid decimal calc\r\n        const widthPxOffset = (49 / gridWidth) / 100\r\n        const heightPxOffset = (49 / gridHeight) / 100\r\n\r\n        const extraLeft = Math.min(left, colRemainderPx)\r\n        const extraWidth = Math.min(width + left, colRemainderPx) - extraLeft\r\n        const extraTop = Math.min(top, rowRemainderPx)\r\n        const extraHeight = Math.min(height + top, rowRemainderPx) - extraTop\r\n\r\n        // shift it by 2/5 px percent to always count for rounding errors\r\n        // could do anything below 1/2 but this is sufficient as \r\n        // (40 / x = 0.01% limit => pxLimit = 40 / 0.01 = 4000px\r\n        const leftPct = ((left * pxPerColFloored + extraLeft) * 100) / gridWidth + widthPxOffset\r\n        const widthPct = ((width * pxPerColFloored + extraWidth) * 100) / gridWidth + widthPxOffset\r\n        const topPct = ((top * pxPerRowFloored + extraTop) * 100) / gridHeight + heightPxOffset\r\n        const heightPct = ((height * pxPerRowFloored + extraHeight) * 100) / gridHeight + heightPxOffset\r\n\r\n        const ending = '%';\r\n\r\n        return { leftPct, widthPct, topPct, heightPct, ending }\r\n    },\r\n\r\n    getItemPositionPixels( gridWidth, gridHeight, gridRows, gridCols, width, height, left, top ) {\r\n        const pxPerColFloored = Math.floor(gridWidth / gridCols)\r\n        const pxPerRowFloored = Math.floor(gridHeight / gridRows)\r\n        const colRemainderPx = gridWidth - pxPerColFloored * gridCols\r\n        const rowRemainderPx = gridHeight - pxPerRowFloored * gridRows\r\n\r\n        const extraLeft = Math.min(left, colRemainderPx)\r\n        const extraWidth = Math.min(width + left, colRemainderPx) - extraLeft\r\n        const extraTop = Math.min(top, rowRemainderPx)\r\n        const extraHeight = Math.min(height + top, rowRemainderPx) - extraTop\r\n\r\n        const widthPx = pxPerColFloored * width + extraWidth\r\n        const heightPx = pxPerRowFloored * height + extraHeight\r\n        const topPx = pxPerRowFloored * top + extraTop\r\n        const leftPx = pxPerColFloored * left + extraLeft\r\n\r\n        const ending = 'px';\r\n\r\n        return { widthPx, heightPx, topPx, leftPx, ending }\r\n    },\r\n\r\n    updateMovedItem( item, gridSizing, gridOptions ) {\r\n        const { newX, newY, newWidth, newHeight } = item\r\n        const { gridWidth, gridHeight, gridRows, gridColumns } = gridSizing\r\n        const renderMode = gridOptions.renderMode\r\n        const movedItem = { ...item }\r\n\r\n        if ( ! ( newWidth && newHeight ) ) {\r\n            console.error( `Item ${ key } does not have a newWidth or newHeight value. Unable to correctly resize item`)\r\n            return item\r\n        }\r\n\r\n        // update the values with the set new values\r\n        movedItem.x = newX\r\n        movedItem.y = newY\r\n        movedItem.width = newWidth\r\n        movedItem.height = newHeight\r\n\r\n        const position = this.getItemPosition( gridWidth, gridHeight, gridRows, gridColumns, movedItem.width, movedItem.height, movedItem.x, movedItem.y, renderMode )\r\n        const styles = this.getItemPositionStyles( gridOptions, movedItem.styles, position )\r\n\r\n        movedItem.position = { ...position }\r\n        movedItem.styles = { ...styles }\r\n\r\n        return movedItem\r\n    },\r\n\r\n    updateGridWithMovedItems( grid, items ) {\r\n        for ( const key in items ) {\r\n            const movedItem = items[ key ]\r\n            this.updateGridWithItemMovement( grid, movedItem, movedItem.x, movedItem.y, movedItem.width, movedItem.height )\r\n        }\r\n    },\r\n\r\n    getUpdatedMovedItems( items, draggedItemId, newTopPx, newLeftPx, newWidthPx, newHeightPx, gridSizing, gridOptions ) {\r\n        return items.forEach(item => {\r\n            const movedItem = this.updateMovedItem( item, gridSizing, gridOptions )\r\n\r\n            if ( key === draggedItemId ) {\r\n                // todo sync the %\r\n                const position = {\r\n                    ...movedItem.position,\r\n                    ending: 'px',\r\n                    topPx: newTopPx,\r\n                    leftPx: newLeftPx,\r\n                    widthPx: newWidthPx,\r\n                    heightPx: newHeightPx\r\n                }\r\n\r\n                const styles = this.getItemPositionStyles( gridOptions, movedItem.styles, position )\r\n\r\n                movedItem.position = { ...position }\r\n                movedItem.styles = { ...styles }\r\n            }\r\n\r\n            return movedItem\r\n        })\r\n    },\r\n\r\n    getUpdatedGridSizeItems( items, gridOptions, gridSizing, ignoreIds = [] ) {\r\n        const renderMode = gridOptions.renderMode\r\n        const { gridRows, gridColumns, gridHeight, gridWidth } = gridSizing \r\n\r\n        return items.map( ( item ) => {\r\n            \r\n            if ( ignoreIds.indexOf( item.id ) > -1 )\r\n                return\r\n\r\n            const position = this.getItemPosition( gridWidth, gridHeight, gridRows, gridColumns, item.width, item.height, item.x, item.y, renderMode )\r\n            const styles = this.getItemPositionStyles( gridOptions, item.styles, position )\r\n\r\n            return {\r\n                ...item,\r\n                position,\r\n                styles\r\n            }\r\n        })\r\n    },\r\n\r\n    getGridBoundaries( gridSizing ) {\r\n        const { gridWidth, gridHeight } = gridSizing\r\n\r\n        return {\r\n            leftBoundary: 0,\r\n            rightBoundary: gridWidth,\r\n            topBoundary: 0,\r\n            bottomBoundary: gridHeight\r\n        }\r\n    },\r\n\r\n    getItemSizing( itemProps, gridSizing ) {\r\n        const { gridWidth, gridHeight } = gridSizing\r\n        const { width, height } = itemProps\r\n        const pxPerColumn = gridWidth / gridColumns\r\n        const pxPerRow = gridHeight / gridRows\r\n        const itemWidthPx = width * pxPerColumn\r\n        const itemHeightPx = height * pxPerRow\r\n\r\n        return { itemWidthPx, itemHeightPx }\r\n    },\r\n\r\n    calculateGridMatrixSize( items, gridOptions, gridSizing ) {\r\n        const { itemsCanResizeGrid, resizeGridDirections } = gridOptions\r\n        const { gridRows, gridColumns } = gridSizing\r\n        const canResizeX = itemsCanResizeGrid && resizeGridDirections !== 'y'\r\n        const canResizeY = itemsCanResizeGrid && resizeGridDirections !== 'x'\r\n\r\n        if ( !( canResizeX || canResizeY ) ) {\r\n            return {\r\n                rows: gridRows,\r\n                columns: gridColumns\r\n            }\r\n        }\r\n\r\n        let rowsRequired = 0\r\n        let columnsRequired = 0\r\n\r\n        items.forEach(item => {\r\n            const rightBoundary = item.x + item.width\r\n            const bottomBoundary = item.y + item.height\r\n\r\n            if ( rightBoundary > columnsRequired )\r\n                columnsRequired = rightBoundary\r\n\r\n            if ( bottomBoundary > rowsRequired )\r\n                rowsRequired = bottomBoundary\r\n        })\r\n\r\n        return {\r\n            rows: canResizeY ? Math.max( rowsRequired, gridRows ) : gridRows,\r\n            columns: canResizeX ? Math.max( columnsRequired, gridColumns ) : gridColumns\r\n        }\r\n    },\r\n\r\n    calculateGridSize( gridSizing, gridOptions, newRowCount, newColumnCount ) {\r\n        const {  gridRows, gridColumns, } = gridOptions \r\n        const { widthPx, heightPx } = gridSizing\r\n        \r\n        const newGridWidth = ( widthPx / gridColumns ) * newColumnCount\r\n        const newGridHeight = ( heightPx / gridRows ) * newRowCount\r\n\r\n        return {\r\n            newGridWidth,\r\n            newGridHeight\r\n        }\r\n    },\r\n\r\n    calculateMovementChange( itemProps, gridOptions, gridSizing, movementDetails  ) {\r\n        const gridResizeable = gridOptions.itemsCanResizeGrid\r\n        const canResizeX = gridResizeable && gridOptions.resizeGridDirections !== 'y'\r\n        const canResizeY = gridResizeable && gridOptions.resizeGridDirections !== 'x'\r\n\r\n        const pxPerColumn = gridSizing.widthPx / gridOptions.gridColumns\r\n        const pxPerRow = gridSizing.heightPx / gridOptions.gridRows\r\n        const xDiff = movementDetails.currentMouseX - movementDetails.initialMouseX\r\n        const yDiff = movementDetails.currentMouseY - movementDetails.initialMouseY\r\n        \r\n        let newLeftPx = movementDetails.initialLeft + xDiff\r\n        let newTopPx = movementDetails.initialTop + yDiff\r\n        let newX = Math.round( newLeftPx / pxPerColumn )\r\n        let newY = Math.round( newTopPx / pxPerRow )\r\n\r\n        if ( newX < 0 ) {\r\n            newX = 0\r\n        }\r\n        else if ( newX + 1 > gridOptions.gridColumns && !canResizeX ) {\r\n            newX = gridOptions.gridColumns - 1\r\n        }\r\n\r\n        if ( newY < 0 ) {\r\n            newY = 0\r\n        }\r\n        else if ( newY + 1 > gridOptions.gridRows && !canResizeY ) {\r\n            newY = gridOptions.gridRows - 1\r\n        }\r\n\r\n        return {\r\n            newX,\r\n            newY,\r\n            newLeftPx,\r\n            newTopPx,\r\n        }\r\n    },\r\n\r\n    calculateResizeChange( itemProps, gridOptions, gridSizing, movementDetails  ) {\r\n        const pxPerColumn = gridSizing.widthPx / gridOptions.gridColumns\r\n        const pxPerRow = gridSizing.heightPx / gridOptions.gridRows\r\n        const xDiff = movementDetails.currentMouseX - movementDetails.initialMouseX\r\n        const yDiff = movementDetails.currentMouseY - movementDetails.initialMouseY\r\n        \r\n        let newWidthPx = movementDetails.initialWidth + xDiff\r\n        let newHeightPx = movementDetails.initialHeight + yDiff\r\n        let newWidth = Math.round( newWidthPx / pxPerColumn )\r\n        let newHeight = Math.round( newHeightPx / pxPerRow )\r\n\r\n        if ( newWidthPx < pxPerColumn ) {\r\n            newWidth = 1\r\n            newWidthPx = pxPerColumn\r\n        }\r\n\r\n        if ( newHeightPx < pxPerRow ) {\r\n            newHeight = 1\r\n            newHeightPx = pxPerRow\r\n        }\r\n\r\n        return {\r\n            newWidthPx,\r\n            newHeightPx,\r\n            newWidth,\r\n            newHeight,\r\n            newLeftPx: itemProps.position.leftPx,\r\n            newTopPx: itemProps.position.topPx\r\n        }\r\n    },\r\n\r\n    calculatePositionChange( itemProps, state ) {\r\n        const { gridSizing, gridOptions } = state\r\n\r\n        const pxPerColumn = gridSizing.widthPx / gridOptions.gridColumns\r\n        const pxPerRow = gridSizing.heightPx / gridOptions.gridRows\r\n\r\n        return {\r\n            newWidthPx: Math.round( pxPerColumn * itemProps.width ),\r\n            newHeightPx: Math.round( pxPerRow * itemProps.height ),\r\n            newLeftPx: Math.round( pxPerColumn * itemProps.x ),\r\n            newTopPx: Math.round( pxPerRow * itemProps.y ),\r\n            newX: itemProps.x,\r\n            newY: itemProps.y,\r\n            newWidth: itemProps.width,\r\n            newHeight: itemProps.height,\r\n        }\r\n    },\r\n\r\n    getNoMovementResult( state, itemProps, movementChange ) {\r\n        const targetItem = {\r\n            ...itemProps,\r\n            position: {\r\n                ...itemProps.position,\r\n                ending: 'px',\r\n                topPx: movementChange.newTopPx, // todo this is wrong\r\n                leftPx: movementChange.newLeftPx,\r\n                widthPx: movementChange.newWidthPx,\r\n                heightPx: movementChange.newHeightPx\r\n            }\r\n        }\r\n\r\n        const updatedItems = state.items.map(item => {\r\n            if ( item.id == targetItem.id ) {\r\n                return targetItem\r\n            }\r\n\r\n            return item\r\n        })\r\n\r\n        return {\r\n            success: true, // todo should this be false?\r\n            grid: state.grid,\r\n            updatedItems,\r\n            targetItem,\r\n            gridSizing: state.gridSizing,\r\n            movementChange,\r\n            itemsMoved: false\r\n        }\r\n    },\r\n\r\n    itemHasMoved( itemProps, movementChange ) {\r\n        return ( movementChange.newX != itemProps.x ) || ( movementChange.newY != itemProps.y )\r\n    },\r\n\r\n    itemHasResized( itemProps, movementChange ) {\r\n        return ( movementChange.newWidth !== itemProps.width ) || ( movementChange.newHeight !== itemProps.height ) \r\n    },\r\n\r\n    checkProposedGridSizing( state, proposedGridColumns, proposedGridRows ) {\r\n        const {  gridOptions } = state\r\n\r\n        const canResizeX = ( gridOptions.resizeGridDirections !== resizeOptions.y )\r\n        const canResizeY = ( gridOptions.resizeGridDirections !== resizeOptions.x )\r\n\r\n        if ( ( !canResizeX && proposedGridColumns !== gridOptions.gridColumns ) || gridOptions.gridColumns < 1 )\r\n            throw 'Invalid grid column proposition from algorithm'\r\n\r\n        else if ( ( !canResizeY && proposedGridRows !== gridOptions.gridRows ) || gridOptions.gridRows < 1 )\r\n            throw 'Invalid grid row proposition from algorithm'\r\n    },\r\n\r\n    getPlaceholderStyles( position ) {\r\n        return {\r\n            ...defaultPlaceholderStyles,\r\n            left: `${ position.leftPx }px`,\r\n            top: `${ position.topPx }px`,\r\n            width: `${ position.widthPx }px`,\r\n            height: `${ position.heightPx }px`\r\n        }\r\n    },\r\n\r\n    addItemToGrid( itemProps, state ) {\r\n        const movementChange = {\r\n            newX: itemProps.x,\r\n            newY: itemProps.y,\r\n            newWidth: itemProps.width,\r\n            newHeight: itemProps.height,\r\n            newTopPx: itemProps.position.topPx,\r\n            newLeftPx: itemProps.position.leftPx,\r\n            newWidthPx: itemProps.position.widthPx,\r\n            newHeightPx: itemProps.position.heightPx\r\n        }\r\n\r\n        return this.onItemMovement( itemProps, state, movementChange )\r\n    },\r\n\r\n    movementIsWithinBounds( movementChange, gridOptions ) {\r\n        const { \r\n            gridColumns, \r\n            gridRows, \r\n            itemsCanResizeGrid, \r\n            resizeGridDirections \r\n        } = gridOptions\r\n\r\n        const {\r\n            newX,\r\n            newY,\r\n            newWidth,\r\n            newHeight\r\n        } = movementChange\r\n\r\n        const canResizeX = itemsCanResizeGrid && resizeGridDirections !== 'y'\r\n        const canResizeY = itemsCanResizeGrid && resizeGridDirections !== 'x'\r\n\r\n        return ( canResizeX || ( newX + newWidth <= gridColumns ) )\r\n            && ( canResizeY || ( newY + newHeight <= gridRows  ) )\r\n    },\r\n\r\n    onItemMovement( itemProps, state, movementChange ) {\r\n        const renderMode = state.gridOptions.renderMode\r\n        const { gridOptions } = state\r\n        const defaultResult = this.getNoMovementResult( state, itemProps, movementChange )\r\n        const draggedItem = { ...itemProps }\r\n\r\n        if ( !this.movementIsWithinBounds( movementChange, gridOptions ) ) {\r\n            return defaultResult\r\n        }\r\n\r\n        const dragResult = gridOptions.algo.run( state, draggedItem, movementChange.newX, movementChange.newY, movementChange.newWidth, movementChange.newHeight )\r\n        \r\n        if ( !dragResult.success ){\r\n            return defaultResult\r\n        }\r\n\r\n        const gridResized = ( dragResult.gridColumns !== gridOptions.gridColumns ) \r\n            || ( dragResult.gridRows !== gridOptions.gridRows )\r\n\r\n        let gridWidth = state.gridSizing.widthPx\r\n        let gridHeight = state.gridSizing.heightPx\r\n        \r\n        if ( gridResized ) {\r\n            this.checkProposedGridSizing( state, dragResult.gridColumns, dragResult.gridRows )\r\n            const newSize = this.calculateGridSize( state.gridSizing, gridOptions, dragResult.gridRows, dragResult.gridColumns )\r\n            gridWidth = newSize.newGridWidth\r\n            gridHeight = newSize.newGridHeight\r\n        }\r\n\r\n        const updatedItems = Object.keys( dragResult.itemsToMove )\r\n            .map(key => {\r\n                const movedItem = dragResult.itemsToMove[ key ]\r\n\r\n                const position = this.getItemPosition( \r\n                    gridWidth, \r\n                    gridHeight, \r\n                    dragResult.gridRows,\r\n                    dragResult.gridColumns, \r\n                    movedItem.width, \r\n                    movedItem.height, \r\n                    movedItem.x, \r\n                    movedItem.y, \r\n                    renderMode \r\n                )\r\n    \r\n                // without these the item will jitter\r\n                if ( movedItem.id === draggedItem.id ) {\r\n                    const placeholderStyles = this.getPlaceholderStyles( position )\r\n    \r\n                    movedItem.meta = {\r\n                        ...movedItem.meta,\r\n                        placeholderStyles\r\n                    }\r\n    \r\n                    movedItem.position = {\r\n                        ...movedItem.position,\r\n                        ending: 'px',\r\n                        topPx: movementChange.newTopPx,\r\n                        leftPx: movementChange.newLeftPx,\r\n                        widthPx: movementChange.newWidthPx,\r\n                        heightPx: movementChange.newHeightPx\r\n                    }\r\n    \r\n                    movedItem.styles = this.getItemPositionStyles( gridOptions, movedItem.styles, movedItem.position )\r\n                    console.log( movedItem.styles )\r\n                }\r\n                else {\r\n                    movedItem.position = position\r\n                    movedItem.styles = this.getItemPositionStyles( gridOptions, movedItem.styles, position )\r\n                }\r\n                \r\n                return movedItem\r\n            })\r\n\r\n        return {\r\n            success: dragResult.success,\r\n            grid: state.grid,\r\n            updatedItems,\r\n            itemsMoved: Object.keys( dragResult.itemsToMove ).length > 1,\r\n            targetItem: draggedItem,\r\n            movementChange,\r\n            gridSizing: {\r\n                gridRows: dragResult.gridRows,\r\n                gridColumns: dragResult.gridColumns,\r\n                heightPx: gridHeight,\r\n                widthPx: gridWidth\r\n            }\r\n        }\r\n    },\r\n\r\n    onItemPositionChanged( itemProps, previousItemProps, state ) {\r\n        const positionChange = this.calculatePositionChange( itemProps, state ) \r\n\r\n        if ( !this.positionHasChanged( itemProps, previousItemProps )) {\r\n            return this.getNoMovementResult( state, previousItemProps, positionChange )\r\n        }      \r\n\r\n        return this.onItemMovement( previousItemProps, state, positionChange )\r\n    },\r\n\r\n    positionHasChanged( itemProps, previousItemProps ) {\r\n        return itemProps.x !== previousItemProps.x\r\n            || itemProps.y !== previousItemProps.y\r\n            || itemProps.width !== previousItemProps.width\r\n            || itemProps.height !== previousItemProps.height\r\n    },\r\n\r\n    onItemDragStart( itemProps ) {\r\n        if ( itemProps.glued )\r\n            return { \r\n                item: itemProps,\r\n                success: false\r\n            }\r\n\r\n        const placeholderStyles = this.getPlaceholderStyles( itemProps.position )\r\n\r\n        const item = {\r\n            ...itemProps,\r\n            meta: {\r\n                ...itemProps.meta,\r\n                isDragging: true,\r\n                placeholderStyles\r\n            }\r\n        }\r\n\r\n        return {\r\n            item,\r\n            success: true\r\n        }\r\n    },\r\n\r\n    ///\r\n    /// Handles all drag logic\r\n    ///\r\n    onItemDrag( itemProps, state, movementDetails ) {\r\n        const movementChange = {\r\n            ...this.calculateMovementChange( itemProps, state.gridOptions, state.gridSizing, movementDetails ),\r\n            newWidth: itemProps.width,\r\n            newHeight: itemProps.height,\r\n            newWidthPx: itemProps.position.widthPx,\r\n            newHeightPx: itemProps.position.heightPx\r\n        }\r\n\r\n        if ( !itemProps.meta.isDragging || itemProps.glued ){   \r\n            return this.getNoMovementResult( state, itemProps, movementChange )\r\n        }\r\n        else if ( !this.itemHasMoved( itemProps, movementChange ) ) {\r\n            return this.getNoMovementResult( state, itemProps, movementChange )\r\n        }\r\n\r\n        return this.onItemMovement( itemProps, state, movementChange )\r\n    },\r\n\r\n    onItemDragStop ( itemProps, items, gridWidth, gridHeight, gridOptions, gridSizing ) {\r\n        const { width, height, x, y } = itemProps\r\n        const { gridRows, gridColumns, renderMode } = gridOptions\r\n\r\n        const meta = { ...itemProps.meta, isDragging: false }\r\n\r\n        const position = this.getItemPosition( gridWidth, gridHeight, gridRows, gridColumns, width, height, x, y, renderMode )\r\n        const styles = this.getItemPositionStyles( gridOptions, itemProps.styles, position )\r\n\r\n        const updatedItem = { \r\n            ...itemProps,\r\n            position,\r\n            styles,\r\n            meta\r\n        }\r\n        \r\n        return updatedItem\r\n    },\r\n\r\n    onItemResizeStart( itemProps ) {\r\n        if ( itemProps.glued ) {\r\n            return { \r\n                item: itemProps,\r\n                success: false\r\n            }\r\n        }\r\n        \r\n        const item = {\r\n            ...itemProps,\r\n            meta: {\r\n                ...itemProps.meta,\r\n                isResizing: true,\r\n            }\r\n        }\r\n\r\n        return {\r\n            item,\r\n            success: true\r\n        }\r\n    },\r\n\r\n    onItemResize( itemProps, state, movementDetails ) {\r\n        const movementChange = {\r\n            ...this.calculateResizeChange( itemProps, state.gridOptions, state.gridSizing, movementDetails ),\r\n            newX: itemProps.x,\r\n            newY: itemProps.y,\r\n            newLeftPx: itemProps.position.leftPx,\r\n            newTopPx: itemProps.position.topPx,\r\n        }\r\n\r\n        if ( !itemProps.meta.isResizing || itemProps.glued ) {\r\n            return this.getNoMovementResult( state, itemProps, movementChange )\r\n        }\r\n        else if ( !this.itemHasResized( itemProps, movementChange ) ) {\r\n            return this.getNoMovementResult( state, itemProps, movementChange )\r\n        }\r\n\r\n        return this.onItemMovement( itemProps, state, movementChange )\r\n    },\r\n\r\n    onItemResizeStop ( itemProps, items, gridWidth, gridHeight, gridOptions, gridSizing ) {\r\n        const { width, height, x, y } = itemProps\r\n        const { gridRows, gridColumns, renderMode } = gridOptions\r\n\r\n        const meta = { ...itemProps.meta, isResizing: false }\r\n\r\n        const position = this.getItemPosition( gridWidth, gridHeight, gridRows, gridColumns, width, height, x, y, renderMode )\r\n        const styles = this.getItemPositionStyles( gridOptions, itemProps.styles, position )\r\n\r\n        const updatedItem = { \r\n            ...itemProps,\r\n            position,\r\n            styles,\r\n            meta\r\n        }\r\n\r\n        return updatedItem\r\n    },\r\n\r\n    ///\r\n    /// Updates the internal 2d grid with the new item position. itemProps should contain the current values, prior to being updated\r\n    ///\r\n    updateGridWithItemMovement( grid, itemProps, oldX, oldY, oldWidth, oldHeight ) {\r\n        const { id, x, y, width, height } = itemProps\r\n\r\n        this.ensureGridHasRow( grid, y )\r\n\r\n        this.setGridWithValue( grid, id, oldX, oldY, oldWidth, oldHeight, undefined, false )\r\n        this.setGridWithValue( grid, id, x, y, width, height, itemProps, true )\r\n    },\r\n\r\n    updateGridWithItem( grid, itemProps ) {\r\n        const { id, x, y, width, height } = itemProps\r\n\r\n        this.setGridWithValue( grid, id, x, y, width, height, itemProps, true )\r\n    },\r\n\r\n    removeGridItem( gridItems, grid, itemProps, gridOptions, gridSizing ) {\r\n        const { id, x, y, width, height } = itemProps\r\n        const { widthPx, heightPx } = gridSizing\r\n        const { renderMode } = gridOptions\r\n\r\n        this.ensureGridHasRow( grid, y )\r\n        this.setGridWithValue( grid, id, x, y, width, height, undefined, true )\r\n\r\n        // todo handle grid resize\r\n        const itemsReverted = gridOptions.algo.onGridItemRemoved( itemProps, grid, gridOptions )\r\n\r\n        const updatedItems = gridItems\r\n            .map( item => {\r\n                const revertDetails = itemsReverted.find( i => i.id === item.id )\r\n\r\n                if ( !revertDetails )\r\n                    return null\r\n                \r\n                const { x, y, width, height } = revertDetails\r\n\r\n                const movedItem = {\r\n                    ...item,\r\n                    x,\r\n                    y,\r\n                    width,\r\n                    height\r\n                }\r\n                \r\n                const position = this.getItemPosition( \r\n                    widthPx,\r\n                    heightPx, \r\n                    gridOptions.gridRows,\r\n                    gridOptions.gridColumns, \r\n                    width, \r\n                    height, \r\n                    x, \r\n                    y, \r\n                    renderMode \r\n                )\r\n    \r\n                movedItem.position = position\r\n                movedItem.styles = this.getItemPositionStyles( gridOptions, movedItem.styles, position )\r\n                \r\n                return movedItem\r\n            })\r\n            .filter( item => item != null )\r\n        \r\n        return {\r\n            updatedItems\r\n        }\r\n    },\r\n\r\n    ensureGridHasRow( grid, rowIndex ) {\r\n        if ( !grid[ rowIndex ] )\r\n            grid[ rowIndex ] = []\r\n    },\r\n\r\n    ///\r\n    /// Set the internal 2d grid with the value specified within the { x, x + width, y, y + height } range as long as the cell does not contain a different item already\r\n    ///\r\n    setGridWithValue( grid, id, x, y, width, height, value, overwrite = false ) {\r\n        for (let j = y; j < y + height; j++)\r\n            for (let i = x; i < x + width; i++) {\r\n                const cellValue = grid[ j ][ i ]\r\n                if ( !helpers.isDefined( cellValue ) || cellValue.id == id || overwrite )\r\n                    grid[ j ][ i ] = value\r\n            }\r\n    },\r\n\r\n    getItemPositionStyles( gridOptions, styles, position ) {\r\n        const { transform, left, top, ...otherStyles } = styles || {}\r\n\r\n        if ( position.ending === '%' ) {\r\n            return {\r\n                ...otherStyles,\r\n                left: `${ position.leftPct }%`,\r\n                top: `${ position.topPct }%`,\r\n                width: `${ position.widthPct }%`,\r\n                height: `${ position.heightPct }%`\r\n            }\r\n        }\r\n        else if ( gridOptions.enableCSS3 ) {\r\n            return {\r\n                ...otherStyles,\r\n                width: `${ position.widthPx }px`,\r\n                height: `${ position.heightPx }px`,\r\n                transform: `translate(${ position.leftPx }px, ${ position.topPx }px)`\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...otherStyles,\r\n            left: `${ position.leftPx }px`,\r\n            top: `${ position.topPx }px`,\r\n            width: `${ position.widthPx }px`,\r\n            height: `${ position.heightPx }px`\r\n        }\r\n    },\r\n\r\n    ///\r\n    /// Gets the internal grid x,y equivalent for the supplied top & left px values\r\n    ///\r\n    getGridXY( gridSizing, topPx, leftPx ) {\r\n        const { gridWidth, gridHeight, gridRows, gridColumns } = gridSizing\r\n        \r\n        const x = this.getGridPosition( gridWidth, leftPx, gridColumns )\r\n        const y = this.getGridPosition( gridHeight, topPx, gridRows )\r\n\r\n        return { x, y }\r\n    },\r\n\r\n    getGridWH( gridWidth, gridHeight, widthPx, heightPx, gridSizing ) {\r\n        const { gridRows, gridColumns } = gridSizing\r\n\r\n        const width = this.getGridPosition( gridWidth, widthPx, gridColumns )\r\n        const height = this.getGridPosition( gridHeight, heightPx, gridRows )\r\n\r\n        return { width, height }\r\n    },\r\n    \r\n    getGridPosition( gridPixels, itemPixels, matrixLevels ) {\r\n        return Math.max( 1, Math.round( itemPixels / gridPixels * matrixLevels ) )\r\n    },\r\n\r\n    getBoundaryLimitedSizing( currentLeftPx, currentTopPx, currentWidthPx, currentHeightPx, boundaries, gridOptions ) {\r\n        const { resizeGridDirections, itemsCanResizeGrid } = gridOptions\r\n        const { rightBoundary, bottomBoundary } = boundaries\r\n\r\n        const xResizeable = itemsCanResizeGrid && resizeGridDirections !== resizeOptions.y\r\n        const yResizeable = itemsCanResizeGrid && resizeGridDirections !== resizeOptions.x\r\n\r\n        const widthPx = xResizeable ? currentWidthPx : Math.min( currentWidthPx, rightBoundary - currentLeftPx )\r\n        const heightPx = yResizeable ? currentHeightPx : Math.min( currentHeightPx, bottomBoundary - currentTopPx )\r\n\r\n        return { widthPx, heightPx }\r\n    }\r\n}\r\n\r\nexport {\r\n    renderModeType, \r\n    resizeOptions, \r\n    defaultItemOptions, \r\n    defaultGridOptions,\r\n}"],"sourceRoot":""}